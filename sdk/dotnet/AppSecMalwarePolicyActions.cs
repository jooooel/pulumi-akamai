// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// **Scopes**: Malware protection
    /// 
    /// Creates, modifies, or deletes the actions associated with one or more policies within a given security policy.
    /// By default, malware policies take no action when triggered.
    /// Note that you must set separate actions for requests that are scanned according to the specified malware policy and those that are unscanned.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var configuration = Akamai.GetAppSecConfiguration.Invoke(new()
    ///     {
    ///         Name = "Documentation",
    ///     });
    /// 
    ///     var appsecMalwarePolicy = new Akamai.AppSecMalwarePolicy("appsecMalwarePolicy", new()
    ///     {
    ///         ConfigId = configuration.Apply(getAppSecConfigurationResult =&gt; getAppSecConfigurationResult.ConfigId),
    ///         MalwarePolicy = File.ReadAllText($"{path.Module}/malware_policy.json"),
    ///     });
    /// 
    ///     var appsecMalwarePolicyActions = new Akamai.AppSecMalwarePolicyActions("appsecMalwarePolicyActions", new()
    ///     {
    ///         ConfigId = configuration.Apply(getAppSecConfigurationResult =&gt; getAppSecConfigurationResult.ConfigId),
    ///         SecurityPolicyId = "gms1_134637",
    ///         MalwarePolicyActions = File.ReadAllText($"{path.Module}/malware_policy_actions.json"),
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AkamaiResourceType("akamai:index/appSecMalwarePolicyActions:AppSecMalwarePolicyActions")]
    public partial class AppSecMalwarePolicyActions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the malware policy action being modified.
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// . Path to a JSON file containing the malware policy IDs and their respective actions. A sample JSON file can be found in the [Modify malware policy actions for a security policy](https://techdocs.akamai.com/application-security/reference/put-policy) section of the Application Security API documentation.
        /// </summary>
        [Output("malwarePolicyActions")]
        public Output<string> MalwarePolicyActions { get; private set; } = null!;

        /// <summary>
        /// . Unique identifier of the security policy associated with the malware policy whose action is being modified.
        /// </summary>
        [Output("securityPolicyId")]
        public Output<string> SecurityPolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a AppSecMalwarePolicyActions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSecMalwarePolicyActions(string name, AppSecMalwarePolicyActionsArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/appSecMalwarePolicyActions:AppSecMalwarePolicyActions", name, args ?? new AppSecMalwarePolicyActionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSecMalwarePolicyActions(string name, Input<string> id, AppSecMalwarePolicyActionsState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/appSecMalwarePolicyActions:AppSecMalwarePolicyActions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSecMalwarePolicyActions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSecMalwarePolicyActions Get(string name, Input<string> id, AppSecMalwarePolicyActionsState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSecMalwarePolicyActions(name, id, state, options);
        }
    }

    public sealed class AppSecMalwarePolicyActionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the malware policy action being modified.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// . Path to a JSON file containing the malware policy IDs and their respective actions. A sample JSON file can be found in the [Modify malware policy actions for a security policy](https://techdocs.akamai.com/application-security/reference/put-policy) section of the Application Security API documentation.
        /// </summary>
        [Input("malwarePolicyActions", required: true)]
        public Input<string> MalwarePolicyActions { get; set; } = null!;

        /// <summary>
        /// . Unique identifier of the security policy associated with the malware policy whose action is being modified.
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        public AppSecMalwarePolicyActionsArgs()
        {
        }
        public static new AppSecMalwarePolicyActionsArgs Empty => new AppSecMalwarePolicyActionsArgs();
    }

    public sealed class AppSecMalwarePolicyActionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the malware policy action being modified.
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// . Path to a JSON file containing the malware policy IDs and their respective actions. A sample JSON file can be found in the [Modify malware policy actions for a security policy](https://techdocs.akamai.com/application-security/reference/put-policy) section of the Application Security API documentation.
        /// </summary>
        [Input("malwarePolicyActions")]
        public Input<string>? MalwarePolicyActions { get; set; }

        /// <summary>
        /// . Unique identifier of the security policy associated with the malware policy whose action is being modified.
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        public AppSecMalwarePolicyActionsState()
        {
        }
        public static new AppSecMalwarePolicyActionsState Empty => new AppSecMalwarePolicyActionsState();
    }
}

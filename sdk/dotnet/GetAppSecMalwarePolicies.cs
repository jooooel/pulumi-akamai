// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetAppSecMalwarePolicies
    {
        /// <summary>
        /// **Scopes**: Security configuration; malware protection
        /// 
        /// Returns information about your malware policies. Malware polices help you control what happens when a request is made to upload files of various types. These policies help you control how your website is protected from malicious uploads.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var configuration = Akamai.GetAppSecConfiguration.Invoke(new()
        ///     {
        ///         Name = "Documentation",
        ///     });
        /// 
        ///     var malwarePolicies = Akamai.GetAppSecMalwarePolicies.Invoke(new()
        ///     {
        ///         ConfigId = configuration.Apply(getAppSecConfigurationResult =&gt; getAppSecConfigurationResult.ConfigId),
        ///     });
        /// 
        ///     var malwarePolicy = Akamai.GetAppSecMalwarePolicies.Invoke(new()
        ///     {
        ///         ConfigId = configuration.Apply(getAppSecConfigurationResult =&gt; getAppSecConfigurationResult.ConfigId),
        ///         MalwarePolicyId = 122149,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["malwarePoliciesOutput"] = malwarePolicies.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.OutputText),
        ///         ["malwarePoliciesJson"] = malwarePolicies.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.Json),
        ///         ["malwarePolicyJson"] = malwarePolicy.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.Json),
        ///         ["malwarePolicyOutput"] = malwarePolicy.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.OutputText),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `output_text`. Tabular report showing the ID and name of the malware policies.
        /// - `json`. JSON-formatted list of the malware policy information.
        /// </summary>
        public static Task<GetAppSecMalwarePoliciesResult> InvokeAsync(GetAppSecMalwarePoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppSecMalwarePoliciesResult>("akamai:index/getAppSecMalwarePolicies:getAppSecMalwarePolicies", args ?? new GetAppSecMalwarePoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// **Scopes**: Security configuration; malware protection
        /// 
        /// Returns information about your malware policies. Malware polices help you control what happens when a request is made to upload files of various types. These policies help you control how your website is protected from malicious uploads.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var configuration = Akamai.GetAppSecConfiguration.Invoke(new()
        ///     {
        ///         Name = "Documentation",
        ///     });
        /// 
        ///     var malwarePolicies = Akamai.GetAppSecMalwarePolicies.Invoke(new()
        ///     {
        ///         ConfigId = configuration.Apply(getAppSecConfigurationResult =&gt; getAppSecConfigurationResult.ConfigId),
        ///     });
        /// 
        ///     var malwarePolicy = Akamai.GetAppSecMalwarePolicies.Invoke(new()
        ///     {
        ///         ConfigId = configuration.Apply(getAppSecConfigurationResult =&gt; getAppSecConfigurationResult.ConfigId),
        ///         MalwarePolicyId = 122149,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["malwarePoliciesOutput"] = malwarePolicies.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.OutputText),
        ///         ["malwarePoliciesJson"] = malwarePolicies.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.Json),
        ///         ["malwarePolicyJson"] = malwarePolicy.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.Json),
        ///         ["malwarePolicyOutput"] = malwarePolicy.Apply(getAppSecMalwarePoliciesResult =&gt; getAppSecMalwarePoliciesResult.OutputText),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `output_text`. Tabular report showing the ID and name of the malware policies.
        /// - `json`. JSON-formatted list of the malware policy information.
        /// </summary>
        public static Output<GetAppSecMalwarePoliciesResult> Invoke(GetAppSecMalwarePoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppSecMalwarePoliciesResult>("akamai:index/getAppSecMalwarePolicies:getAppSecMalwarePolicies", args ?? new GetAppSecMalwarePoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppSecMalwarePoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the malware policies.
        /// </summary>
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        /// <summary>
        /// . Unique identifier of the malware policy you want to return information for. If not included, information is returned for all of your malware policies.
        /// </summary>
        [Input("malwarePolicyId")]
        public int? MalwarePolicyId { get; set; }

        public GetAppSecMalwarePoliciesArgs()
        {
        }
        public static new GetAppSecMalwarePoliciesArgs Empty => new GetAppSecMalwarePoliciesArgs();
    }

    public sealed class GetAppSecMalwarePoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the malware policies.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// . Unique identifier of the malware policy you want to return information for. If not included, information is returned for all of your malware policies.
        /// </summary>
        [Input("malwarePolicyId")]
        public Input<int>? MalwarePolicyId { get; set; }

        public GetAppSecMalwarePoliciesInvokeArgs()
        {
        }
        public static new GetAppSecMalwarePoliciesInvokeArgs Empty => new GetAppSecMalwarePoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppSecMalwarePoliciesResult
    {
        public readonly int ConfigId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly int? MalwarePolicyId;
        public readonly string OutputText;

        [OutputConstructor]
        private GetAppSecMalwarePoliciesResult(
            int configId,

            string id,

            string json,

            int? malwarePolicyId,

            string outputText)
        {
            ConfigId = configId;
            Id = id;
            Json = json;
            MalwarePolicyId = malwarePolicyId;
            OutputText = outputText;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationResult
    {
        public readonly bool? AllowLargePostBody;
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicyResult? CloudletPolicy;
        public readonly bool? Enabled;
        public readonly string? Failure302Uri;
        public readonly string? Label;
        public readonly bool? Locked;
        public readonly string? Penalty302Uri;
        public readonly string? Penalty403NetStoragePath;
        public readonly string? PenaltyAction;
        public readonly int? PenaltyBrandedDenyCacheTtl;
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorageResult? PenaltyNetStorage;
        public readonly int? PenaltyThreshold;
        public readonly string? PenaltyTitle;
        public readonly bool? ResetOnValid;
        public readonly string? TemplateUuid;
        public readonly bool? UserIdentificationByCookie;
        public readonly bool? UserIdentificationByHeaders;
        public readonly bool? UserIdentificationByIp;
        public readonly bool? UserIdentificationByParams;
        public readonly string? UserIdentificationKeyCookie;
        public readonly ImmutableArray<string> UserIdentificationKeyHeaders;
        public readonly ImmutableArray<string> UserIdentificationKeyParams;
        public readonly string? UserIdentificationTitle;
        public readonly string? Uuid;
        public readonly string? ValidateOnOriginHeaderName;
        public readonly string? ValidateOnOriginHeaderValue;
        public readonly int? ValidateOnOriginResponseCode;
        public readonly string? ValidateOnOriginWith;
        public readonly string? ValidationTitle;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationResult(
            bool? allowLargePostBody,

            Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicyResult? cloudletPolicy,

            bool? enabled,

            string? failure302Uri,

            string? label,

            bool? locked,

            string? penalty302Uri,

            string? penalty403NetStoragePath,

            string? penaltyAction,

            int? penaltyBrandedDenyCacheTtl,

            Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorageResult? penaltyNetStorage,

            int? penaltyThreshold,

            string? penaltyTitle,

            bool? resetOnValid,

            string? templateUuid,

            bool? userIdentificationByCookie,

            bool? userIdentificationByHeaders,

            bool? userIdentificationByIp,

            bool? userIdentificationByParams,

            string? userIdentificationKeyCookie,

            ImmutableArray<string> userIdentificationKeyHeaders,

            ImmutableArray<string> userIdentificationKeyParams,

            string? userIdentificationTitle,

            string? uuid,

            string? validateOnOriginHeaderName,

            string? validateOnOriginHeaderValue,

            int? validateOnOriginResponseCode,

            string? validateOnOriginWith,

            string? validationTitle)
        {
            AllowLargePostBody = allowLargePostBody;
            CloudletPolicy = cloudletPolicy;
            Enabled = enabled;
            Failure302Uri = failure302Uri;
            Label = label;
            Locked = locked;
            Penalty302Uri = penalty302Uri;
            Penalty403NetStoragePath = penalty403NetStoragePath;
            PenaltyAction = penaltyAction;
            PenaltyBrandedDenyCacheTtl = penaltyBrandedDenyCacheTtl;
            PenaltyNetStorage = penaltyNetStorage;
            PenaltyThreshold = penaltyThreshold;
            PenaltyTitle = penaltyTitle;
            ResetOnValid = resetOnValid;
            TemplateUuid = templateUuid;
            UserIdentificationByCookie = userIdentificationByCookie;
            UserIdentificationByHeaders = userIdentificationByHeaders;
            UserIdentificationByIp = userIdentificationByIp;
            UserIdentificationByParams = userIdentificationByParams;
            UserIdentificationKeyCookie = userIdentificationKeyCookie;
            UserIdentificationKeyHeaders = userIdentificationKeyHeaders;
            UserIdentificationKeyParams = userIdentificationKeyParams;
            UserIdentificationTitle = userIdentificationTitle;
            Uuid = uuid;
            ValidateOnOriginHeaderName = validateOnOriginHeaderName;
            ValidateOnOriginHeaderValue = validateOnOriginHeaderValue;
            ValidateOnOriginResponseCode = validateOnOriginResponseCode;
            ValidateOnOriginWith = validateOnOriginWith;
            ValidationTitle = validationTitle;
        }
    }
}

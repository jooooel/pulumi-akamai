// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetEdgeWorker
    {
        /// <summary>
        /// Use the `akamai.EdgeWorker` data source to get an EdgeWorker for a given EdgeWorker ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// This example returns the resource tier fields for the selected EdgeWorker ID:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Akamai.GetEdgeWorker.Invoke(new()
        ///     {
        ///         EdgeworkerId = 3,
        ///         LocalBundle = "test_tmp/TestDataEdgeWorkersEdgeWorker/bundles/edgeworker_one_warning.tgz",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// This data source returns these attributes:
        /// 
        /// * `name` - The EdgeWorker name.
        /// * `group_id` - Defines the group association for the EdgeWorker.
        /// * `resource_tier_id` - The unique identifier of a resource tier.
        /// * `local_bundle_hash` - The local bundle hash for the EdgeWorker. It's used to identify content changes for the bundle.
        /// * `version` - The bundle version.
        /// * `warnings` - The list of warnings returned by EdgeWorker validation.
        /// </summary>
        public static Task<GetEdgeWorkerResult> InvokeAsync(GetEdgeWorkerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEdgeWorkerResult>("akamai:index/getEdgeWorker:getEdgeWorker", args ?? new GetEdgeWorkerArgs(), options.WithDefaults());

        /// <summary>
        /// Use the `akamai.EdgeWorker` data source to get an EdgeWorker for a given EdgeWorker ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// This example returns the resource tier fields for the selected EdgeWorker ID:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Akamai.GetEdgeWorker.Invoke(new()
        ///     {
        ///         EdgeworkerId = 3,
        ///         LocalBundle = "test_tmp/TestDataEdgeWorkersEdgeWorker/bundles/edgeworker_one_warning.tgz",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// This data source returns these attributes:
        /// 
        /// * `name` - The EdgeWorker name.
        /// * `group_id` - Defines the group association for the EdgeWorker.
        /// * `resource_tier_id` - The unique identifier of a resource tier.
        /// * `local_bundle_hash` - The local bundle hash for the EdgeWorker. It's used to identify content changes for the bundle.
        /// * `version` - The bundle version.
        /// * `warnings` - The list of warnings returned by EdgeWorker validation.
        /// </summary>
        public static Output<GetEdgeWorkerResult> Invoke(GetEdgeWorkerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEdgeWorkerResult>("akamai:index/getEdgeWorker:getEdgeWorker", args ?? new GetEdgeWorkerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEdgeWorkerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the EdgeWorker.
        /// </summary>
        [Input("edgeworkerId", required: true)]
        public int EdgeworkerId { get; set; }

        /// <summary>
        /// The path where the EdgeWorkers `.tgz` code bundle will be stored.
        /// </summary>
        [Input("localBundle")]
        public string? LocalBundle { get; set; }

        public GetEdgeWorkerArgs()
        {
        }
        public static new GetEdgeWorkerArgs Empty => new GetEdgeWorkerArgs();
    }

    public sealed class GetEdgeWorkerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the EdgeWorker.
        /// </summary>
        [Input("edgeworkerId", required: true)]
        public Input<int> EdgeworkerId { get; set; } = null!;

        /// <summary>
        /// The path where the EdgeWorkers `.tgz` code bundle will be stored.
        /// </summary>
        [Input("localBundle")]
        public Input<string>? LocalBundle { get; set; }

        public GetEdgeWorkerInvokeArgs()
        {
        }
        public static new GetEdgeWorkerInvokeArgs Empty => new GetEdgeWorkerInvokeArgs();
    }


    [OutputType]
    public sealed class GetEdgeWorkerResult
    {
        public readonly int EdgeworkerId;
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? LocalBundle;
        public readonly string LocalBundleHash;
        public readonly string Name;
        public readonly int ResourceTierId;
        public readonly string Version;
        public readonly ImmutableArray<string> Warnings;

        [OutputConstructor]
        private GetEdgeWorkerResult(
            int edgeworkerId,

            string groupId,

            string id,

            string? localBundle,

            string localBundleHash,

            string name,

            int resourceTierId,

            string version,

            ImmutableArray<string> warnings)
        {
            EdgeworkerId = edgeworkerId;
            GroupId = groupId;
            Id = id;
            LocalBundle = localBundle;
            LocalBundleHash = localBundleHash;
            Name = name;
            ResourceTierId = resourceTierId;
            Version = version;
            Warnings = warnings;
        }
    }
}

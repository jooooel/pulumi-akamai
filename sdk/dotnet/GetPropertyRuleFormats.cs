// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetPropertyRuleFormats
    {
        /// <summary>
        /// Use the `akamai.getPropertyRuleFormats` data source to query the list of
        /// known rule formats.
        /// You use rule formats to [freeze](https://techdocs.akamai.com/property-mgr/reference/modify-a-rule#freeze-a-feature-set-for-a-rule-tree) or
        /// [update](https://techdocs.akamai.com/property-mgr/reference/modify-a-rule#update-rules-to-a-newer-set-of-features) the versioned set of behaviors
        /// and criteria a rule tree invokes. Without this mechanism, behaviors and criteria
        /// would update automatically and generate unexpected errors.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Use this example to list available property rule formats:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["propertyMatch"] = data.Akamai_property_rule_formats.My_example,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPropertyRuleFormatsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPropertyRuleFormatsResult>("akamai:index/getPropertyRuleFormats:getPropertyRuleFormats", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetPropertyRuleFormatsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> RuleFormats;

        [OutputConstructor]
        private GetPropertyRuleFormatsResult(
            string id,

            ImmutableArray<string> ruleFormats)
        {
            Id = id;
            RuleFormats = ruleFormats;
        }
    }
}

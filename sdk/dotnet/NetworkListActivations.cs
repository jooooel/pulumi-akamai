// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// Use the `akamai.NetworkListActivations` resource to activate a network list in either the STAGING or PRODUCTION
    /// environment.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var networkListIp = new Akamai.NetworkList("networkListIp", new()
    ///     {
    ///         Type = "IP",
    ///         Description = "IP network list",
    ///         Lists = @var.Ip_list,
    ///         Mode = "REPLACE",
    ///     });
    /// 
    ///     var activation = new Akamai.NetworkListActivations("activation", new()
    ///     {
    ///         NetworkListId = resource.Akamai_networklist_network_list.Network_list_ip.Network_list_id,
    ///         Network = "STAGING",
    ///         SyncPoint = resource.Akamai_networklist_network_list.Network_list_ip.Sync_point,
    ///         Notes = "TEST Notes",
    ///         NotificationEmails = new[]
    ///         {
    ///             "user@example.com",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AkamaiResourceType("akamai:index/networkListActivations:NetworkListActivations")]
    public partial class NetworkListActivations : global::Pulumi.CustomResource
    {
        [Output("activate")]
        public Output<bool?> Activate { get; private set; } = null!;

        /// <summary>
        /// The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to
        /// `STAGING`.
        /// </summary>
        [Output("network")]
        public Output<string?> Network { get; private set; } = null!;

        /// <summary>
        /// The ID of the network list to be activated
        /// </summary>
        [Output("networkListId")]
        public Output<string> NetworkListId { get; private set; } = null!;

        /// <summary>
        /// A comment describing the activation.
        /// </summary>
        [Output("notes")]
        public Output<string?> Notes { get; private set; } = null!;

        /// <summary>
        /// A bracketed, comma-separated list of email addresses that will be notified when the
        /// operation is complete.
        /// </summary>
        [Output("notificationEmails")]
        public Output<ImmutableArray<string>> NotificationEmails { get; private set; } = null!;

        /// <summary>
        /// The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network
        /// list was not activated.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// An integer that identifies the current version of the network list; this value is incremented each time
        /// the list is modified.
        /// </summary>
        [Output("syncPoint")]
        public Output<int> SyncPoint { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkListActivations resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkListActivations(string name, NetworkListActivationsArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/networkListActivations:NetworkListActivations", name, args ?? new NetworkListActivationsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkListActivations(string name, Input<string> id, NetworkListActivationsState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/networkListActivations:NetworkListActivations", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkListActivations resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkListActivations Get(string name, Input<string> id, NetworkListActivationsState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkListActivations(name, id, state, options);
        }
    }

    public sealed class NetworkListActivationsArgs : global::Pulumi.ResourceArgs
    {
        [Input("activate")]
        public Input<bool>? Activate { get; set; }

        /// <summary>
        /// The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to
        /// `STAGING`.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the network list to be activated
        /// </summary>
        [Input("networkListId", required: true)]
        public Input<string> NetworkListId { get; set; } = null!;

        /// <summary>
        /// A comment describing the activation.
        /// </summary>
        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("notificationEmails", required: true)]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// A bracketed, comma-separated list of email addresses that will be notified when the
        /// operation is complete.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        /// <summary>
        /// An integer that identifies the current version of the network list; this value is incremented each time
        /// the list is modified.
        /// </summary>
        [Input("syncPoint", required: true)]
        public Input<int> SyncPoint { get; set; } = null!;

        public NetworkListActivationsArgs()
        {
        }
        public static new NetworkListActivationsArgs Empty => new NetworkListActivationsArgs();
    }

    public sealed class NetworkListActivationsState : global::Pulumi.ResourceArgs
    {
        [Input("activate")]
        public Input<bool>? Activate { get; set; }

        /// <summary>
        /// The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to
        /// `STAGING`.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the network list to be activated
        /// </summary>
        [Input("networkListId")]
        public Input<string>? NetworkListId { get; set; }

        /// <summary>
        /// A comment describing the activation.
        /// </summary>
        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("notificationEmails")]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// A bracketed, comma-separated list of email addresses that will be notified when the
        /// operation is complete.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        /// <summary>
        /// The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network
        /// list was not activated.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// An integer that identifies the current version of the network list; this value is incremented each time
        /// the list is modified.
        /// </summary>
        [Input("syncPoint")]
        public Input<int>? SyncPoint { get; set; }

        public NetworkListActivationsState()
        {
        }
        public static new NetworkListActivationsState Empty => new NetworkListActivationsState();
    }
}

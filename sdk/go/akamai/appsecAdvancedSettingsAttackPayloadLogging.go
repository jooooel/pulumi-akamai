// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security configuration; security policy
//
// Enables, disables, or updates Attack Payload Logging settings.
// By default, this operation is applied at the configuration level, which means that it is applied to all the security policies within that configuration.
// However, by using the `securityPolicyId` parameter you can specify custom settings for an individual security policy.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/logging/attack-payload]
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"fmt"
//	"os"
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func readFileOrPanic(path string) pulumi.StringPtrInput {
//		data, err := os.ReadFile(path)
//		if err != nil {
//			panic(err.Error())
//		}
//		return pulumi.String(string(data))
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = akamai.NewAppsecAdvancedSettingsAttackPayloadLogging(ctx, "attackPayloadLogging", &akamai.AppsecAdvancedSettingsAttackPayloadLoggingArgs{
//				ConfigId:             *pulumi.Int(configuration.ConfigId),
//				AttackPayloadLogging: readFileOrPanic(fmt.Sprintf("%v/attack-payload-logging.json", path.Module)),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = akamai.NewAppsecAdvancedSettingsAttackPayloadLogging(ctx, "policyLogging", &akamai.AppsecAdvancedSettingsAttackPayloadLoggingArgs{
//				ConfigId:             *pulumi.Int(configuration.ConfigId),
//				SecurityPolicyId:     pulumi.String("gms1_134637"),
//				AttackPayloadLogging: readFileOrPanic(fmt.Sprintf("%v/attack-payload-logging.json", path.Module)),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AppsecAdvancedSettingsAttackPayloadLogging struct {
	pulumi.CustomResourceState

	// . JSON representation of the Attack Payload Logging settings to be configured.
	AttackPayloadLogging pulumi.StringOutput `pulumi:"attackPayloadLogging"`
	// . Unique identifier of the security configuration containing the Attack Payload Logging settings being modified.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// . Unique identifier of the security policies whose settings are being modified. If not included, the Attack Payload Logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.
	SecurityPolicyId pulumi.StringPtrOutput `pulumi:"securityPolicyId"`
}

// NewAppsecAdvancedSettingsAttackPayloadLogging registers a new resource with the given unique name, arguments, and options.
func NewAppsecAdvancedSettingsAttackPayloadLogging(ctx *pulumi.Context,
	name string, args *AppsecAdvancedSettingsAttackPayloadLoggingArgs, opts ...pulumi.ResourceOption) (*AppsecAdvancedSettingsAttackPayloadLogging, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttackPayloadLogging == nil {
		return nil, errors.New("invalid value for required argument 'AttackPayloadLogging'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	var resource AppsecAdvancedSettingsAttackPayloadLogging
	err := ctx.RegisterResource("akamai:index/appsecAdvancedSettingsAttackPayloadLogging:AppsecAdvancedSettingsAttackPayloadLogging", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsecAdvancedSettingsAttackPayloadLogging gets an existing AppsecAdvancedSettingsAttackPayloadLogging resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsecAdvancedSettingsAttackPayloadLogging(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsecAdvancedSettingsAttackPayloadLoggingState, opts ...pulumi.ResourceOption) (*AppsecAdvancedSettingsAttackPayloadLogging, error) {
	var resource AppsecAdvancedSettingsAttackPayloadLogging
	err := ctx.ReadResource("akamai:index/appsecAdvancedSettingsAttackPayloadLogging:AppsecAdvancedSettingsAttackPayloadLogging", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsecAdvancedSettingsAttackPayloadLogging resources.
type appsecAdvancedSettingsAttackPayloadLoggingState struct {
	// . JSON representation of the Attack Payload Logging settings to be configured.
	AttackPayloadLogging *string `pulumi:"attackPayloadLogging"`
	// . Unique identifier of the security configuration containing the Attack Payload Logging settings being modified.
	ConfigId *int `pulumi:"configId"`
	// . Unique identifier of the security policies whose settings are being modified. If not included, the Attack Payload Logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppsecAdvancedSettingsAttackPayloadLoggingState struct {
	// . JSON representation of the Attack Payload Logging settings to be configured.
	AttackPayloadLogging pulumi.StringPtrInput
	// . Unique identifier of the security configuration containing the Attack Payload Logging settings being modified.
	ConfigId pulumi.IntPtrInput
	// . Unique identifier of the security policies whose settings are being modified. If not included, the Attack Payload Logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppsecAdvancedSettingsAttackPayloadLoggingState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecAdvancedSettingsAttackPayloadLoggingState)(nil)).Elem()
}

type appsecAdvancedSettingsAttackPayloadLoggingArgs struct {
	// . JSON representation of the Attack Payload Logging settings to be configured.
	AttackPayloadLogging string `pulumi:"attackPayloadLogging"`
	// . Unique identifier of the security configuration containing the Attack Payload Logging settings being modified.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the security policies whose settings are being modified. If not included, the Attack Payload Logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppsecAdvancedSettingsAttackPayloadLogging resource.
type AppsecAdvancedSettingsAttackPayloadLoggingArgs struct {
	// . JSON representation of the Attack Payload Logging settings to be configured.
	AttackPayloadLogging pulumi.StringInput
	// . Unique identifier of the security configuration containing the Attack Payload Logging settings being modified.
	ConfigId pulumi.IntInput
	// . Unique identifier of the security policies whose settings are being modified. If not included, the Attack Payload Logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppsecAdvancedSettingsAttackPayloadLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecAdvancedSettingsAttackPayloadLoggingArgs)(nil)).Elem()
}

type AppsecAdvancedSettingsAttackPayloadLoggingInput interface {
	pulumi.Input

	ToAppsecAdvancedSettingsAttackPayloadLoggingOutput() AppsecAdvancedSettingsAttackPayloadLoggingOutput
	ToAppsecAdvancedSettingsAttackPayloadLoggingOutputWithContext(ctx context.Context) AppsecAdvancedSettingsAttackPayloadLoggingOutput
}

func (*AppsecAdvancedSettingsAttackPayloadLogging) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecAdvancedSettingsAttackPayloadLogging)(nil)).Elem()
}

func (i *AppsecAdvancedSettingsAttackPayloadLogging) ToAppsecAdvancedSettingsAttackPayloadLoggingOutput() AppsecAdvancedSettingsAttackPayloadLoggingOutput {
	return i.ToAppsecAdvancedSettingsAttackPayloadLoggingOutputWithContext(context.Background())
}

func (i *AppsecAdvancedSettingsAttackPayloadLogging) ToAppsecAdvancedSettingsAttackPayloadLoggingOutputWithContext(ctx context.Context) AppsecAdvancedSettingsAttackPayloadLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecAdvancedSettingsAttackPayloadLoggingOutput)
}

// AppsecAdvancedSettingsAttackPayloadLoggingArrayInput is an input type that accepts AppsecAdvancedSettingsAttackPayloadLoggingArray and AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput values.
// You can construct a concrete instance of `AppsecAdvancedSettingsAttackPayloadLoggingArrayInput` via:
//
//	AppsecAdvancedSettingsAttackPayloadLoggingArray{ AppsecAdvancedSettingsAttackPayloadLoggingArgs{...} }
type AppsecAdvancedSettingsAttackPayloadLoggingArrayInput interface {
	pulumi.Input

	ToAppsecAdvancedSettingsAttackPayloadLoggingArrayOutput() AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput
	ToAppsecAdvancedSettingsAttackPayloadLoggingArrayOutputWithContext(context.Context) AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput
}

type AppsecAdvancedSettingsAttackPayloadLoggingArray []AppsecAdvancedSettingsAttackPayloadLoggingInput

func (AppsecAdvancedSettingsAttackPayloadLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecAdvancedSettingsAttackPayloadLogging)(nil)).Elem()
}

func (i AppsecAdvancedSettingsAttackPayloadLoggingArray) ToAppsecAdvancedSettingsAttackPayloadLoggingArrayOutput() AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput {
	return i.ToAppsecAdvancedSettingsAttackPayloadLoggingArrayOutputWithContext(context.Background())
}

func (i AppsecAdvancedSettingsAttackPayloadLoggingArray) ToAppsecAdvancedSettingsAttackPayloadLoggingArrayOutputWithContext(ctx context.Context) AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput)
}

// AppsecAdvancedSettingsAttackPayloadLoggingMapInput is an input type that accepts AppsecAdvancedSettingsAttackPayloadLoggingMap and AppsecAdvancedSettingsAttackPayloadLoggingMapOutput values.
// You can construct a concrete instance of `AppsecAdvancedSettingsAttackPayloadLoggingMapInput` via:
//
//	AppsecAdvancedSettingsAttackPayloadLoggingMap{ "key": AppsecAdvancedSettingsAttackPayloadLoggingArgs{...} }
type AppsecAdvancedSettingsAttackPayloadLoggingMapInput interface {
	pulumi.Input

	ToAppsecAdvancedSettingsAttackPayloadLoggingMapOutput() AppsecAdvancedSettingsAttackPayloadLoggingMapOutput
	ToAppsecAdvancedSettingsAttackPayloadLoggingMapOutputWithContext(context.Context) AppsecAdvancedSettingsAttackPayloadLoggingMapOutput
}

type AppsecAdvancedSettingsAttackPayloadLoggingMap map[string]AppsecAdvancedSettingsAttackPayloadLoggingInput

func (AppsecAdvancedSettingsAttackPayloadLoggingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecAdvancedSettingsAttackPayloadLogging)(nil)).Elem()
}

func (i AppsecAdvancedSettingsAttackPayloadLoggingMap) ToAppsecAdvancedSettingsAttackPayloadLoggingMapOutput() AppsecAdvancedSettingsAttackPayloadLoggingMapOutput {
	return i.ToAppsecAdvancedSettingsAttackPayloadLoggingMapOutputWithContext(context.Background())
}

func (i AppsecAdvancedSettingsAttackPayloadLoggingMap) ToAppsecAdvancedSettingsAttackPayloadLoggingMapOutputWithContext(ctx context.Context) AppsecAdvancedSettingsAttackPayloadLoggingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecAdvancedSettingsAttackPayloadLoggingMapOutput)
}

type AppsecAdvancedSettingsAttackPayloadLoggingOutput struct{ *pulumi.OutputState }

func (AppsecAdvancedSettingsAttackPayloadLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecAdvancedSettingsAttackPayloadLogging)(nil)).Elem()
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingOutput) ToAppsecAdvancedSettingsAttackPayloadLoggingOutput() AppsecAdvancedSettingsAttackPayloadLoggingOutput {
	return o
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingOutput) ToAppsecAdvancedSettingsAttackPayloadLoggingOutputWithContext(ctx context.Context) AppsecAdvancedSettingsAttackPayloadLoggingOutput {
	return o
}

// . JSON representation of the Attack Payload Logging settings to be configured.
func (o AppsecAdvancedSettingsAttackPayloadLoggingOutput) AttackPayloadLogging() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecAdvancedSettingsAttackPayloadLogging) pulumi.StringOutput { return v.AttackPayloadLogging }).(pulumi.StringOutput)
}

// . Unique identifier of the security configuration containing the Attack Payload Logging settings being modified.
func (o AppsecAdvancedSettingsAttackPayloadLoggingOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppsecAdvancedSettingsAttackPayloadLogging) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// . Unique identifier of the security policies whose settings are being modified. If not included, the Attack Payload Logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.
func (o AppsecAdvancedSettingsAttackPayloadLoggingOutput) SecurityPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsecAdvancedSettingsAttackPayloadLogging) pulumi.StringPtrOutput { return v.SecurityPolicyId }).(pulumi.StringPtrOutput)
}

type AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput struct{ *pulumi.OutputState }

func (AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecAdvancedSettingsAttackPayloadLogging)(nil)).Elem()
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput) ToAppsecAdvancedSettingsAttackPayloadLoggingArrayOutput() AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput {
	return o
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput) ToAppsecAdvancedSettingsAttackPayloadLoggingArrayOutputWithContext(ctx context.Context) AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput {
	return o
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput) Index(i pulumi.IntInput) AppsecAdvancedSettingsAttackPayloadLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsecAdvancedSettingsAttackPayloadLogging {
		return vs[0].([]*AppsecAdvancedSettingsAttackPayloadLogging)[vs[1].(int)]
	}).(AppsecAdvancedSettingsAttackPayloadLoggingOutput)
}

type AppsecAdvancedSettingsAttackPayloadLoggingMapOutput struct{ *pulumi.OutputState }

func (AppsecAdvancedSettingsAttackPayloadLoggingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecAdvancedSettingsAttackPayloadLogging)(nil)).Elem()
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingMapOutput) ToAppsecAdvancedSettingsAttackPayloadLoggingMapOutput() AppsecAdvancedSettingsAttackPayloadLoggingMapOutput {
	return o
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingMapOutput) ToAppsecAdvancedSettingsAttackPayloadLoggingMapOutputWithContext(ctx context.Context) AppsecAdvancedSettingsAttackPayloadLoggingMapOutput {
	return o
}

func (o AppsecAdvancedSettingsAttackPayloadLoggingMapOutput) MapIndex(k pulumi.StringInput) AppsecAdvancedSettingsAttackPayloadLoggingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsecAdvancedSettingsAttackPayloadLogging {
		return vs[0].(map[string]*AppsecAdvancedSettingsAttackPayloadLogging)[vs[1].(string)]
	}).(AppsecAdvancedSettingsAttackPayloadLoggingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecAdvancedSettingsAttackPayloadLoggingInput)(nil)).Elem(), &AppsecAdvancedSettingsAttackPayloadLogging{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecAdvancedSettingsAttackPayloadLoggingArrayInput)(nil)).Elem(), AppsecAdvancedSettingsAttackPayloadLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecAdvancedSettingsAttackPayloadLoggingMapInput)(nil)).Elem(), AppsecAdvancedSettingsAttackPayloadLoggingMap{})
	pulumi.RegisterOutputType(AppsecAdvancedSettingsAttackPayloadLoggingOutput{})
	pulumi.RegisterOutputType(AppsecAdvancedSettingsAttackPayloadLoggingArrayOutput{})
	pulumi.RegisterOutputType(AppsecAdvancedSettingsAttackPayloadLoggingMapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security configuration; malware protection
//
// Returns information about your malware policies. Malware polices help you control what happens when a request is made to upload files of various types. These policies help you control how your website is protected from malicious uploads.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			malwarePolicies, err := akamai.GetAppSecMalwarePolicies(ctx, &akamai.GetAppSecMalwarePoliciesArgs{
//				ConfigId: configuration.ConfigId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("malwarePoliciesOutput", malwarePolicies.OutputText)
//			ctx.Export("malwarePoliciesJson", malwarePolicies.Json)
//			malwarePolicy, err := akamai.GetAppSecMalwarePolicies(ctx, &akamai.GetAppSecMalwarePoliciesArgs{
//				ConfigId:        configuration.ConfigId,
//				MalwarePolicyId: pulumi.IntRef(122149),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("malwarePolicyJson", malwarePolicy.Json)
//			ctx.Export("malwarePolicyOutput", malwarePolicy.OutputText)
//			return nil
//		})
//	}
//
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `outputText`. Tabular report showing the ID and name of the malware policies.
// - `json`. JSON-formatted list of the malware policy information.
func GetAppSecMalwarePolicies(ctx *pulumi.Context, args *GetAppSecMalwarePoliciesArgs, opts ...pulumi.InvokeOption) (*GetAppSecMalwarePoliciesResult, error) {
	var rv GetAppSecMalwarePoliciesResult
	err := ctx.Invoke("akamai:index/getAppSecMalwarePolicies:getAppSecMalwarePolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecMalwarePolicies.
type GetAppSecMalwarePoliciesArgs struct {
	// . Unique identifier of the security configuration associated with the malware policies.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the malware policy you want to return information for. If not included, information is returned for all of your malware policies.
	MalwarePolicyId *int `pulumi:"malwarePolicyId"`
}

// A collection of values returned by getAppSecMalwarePolicies.
type GetAppSecMalwarePoliciesResult struct {
	ConfigId int `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id              string `pulumi:"id"`
	Json            string `pulumi:"json"`
	MalwarePolicyId *int   `pulumi:"malwarePolicyId"`
	OutputText      string `pulumi:"outputText"`
}

func GetAppSecMalwarePoliciesOutput(ctx *pulumi.Context, args GetAppSecMalwarePoliciesOutputArgs, opts ...pulumi.InvokeOption) GetAppSecMalwarePoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppSecMalwarePoliciesResult, error) {
			args := v.(GetAppSecMalwarePoliciesArgs)
			r, err := GetAppSecMalwarePolicies(ctx, &args, opts...)
			var s GetAppSecMalwarePoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAppSecMalwarePoliciesResultOutput)
}

// A collection of arguments for invoking getAppSecMalwarePolicies.
type GetAppSecMalwarePoliciesOutputArgs struct {
	// . Unique identifier of the security configuration associated with the malware policies.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the malware policy you want to return information for. If not included, information is returned for all of your malware policies.
	MalwarePolicyId pulumi.IntPtrInput `pulumi:"malwarePolicyId"`
}

func (GetAppSecMalwarePoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecMalwarePoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecMalwarePolicies.
type GetAppSecMalwarePoliciesResultOutput struct{ *pulumi.OutputState }

func (GetAppSecMalwarePoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecMalwarePoliciesResult)(nil)).Elem()
}

func (o GetAppSecMalwarePoliciesResultOutput) ToGetAppSecMalwarePoliciesResultOutput() GetAppSecMalwarePoliciesResultOutput {
	return o
}

func (o GetAppSecMalwarePoliciesResultOutput) ToGetAppSecMalwarePoliciesResultOutputWithContext(ctx context.Context) GetAppSecMalwarePoliciesResultOutput {
	return o
}

func (o GetAppSecMalwarePoliciesResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppSecMalwarePoliciesResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppSecMalwarePoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecMalwarePoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAppSecMalwarePoliciesResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecMalwarePoliciesResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAppSecMalwarePoliciesResultOutput) MalwarePolicyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSecMalwarePoliciesResult) *int { return v.MalwarePolicyId }).(pulumi.IntPtrOutput)
}

func (o GetAppSecMalwarePoliciesResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecMalwarePoliciesResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppSecMalwarePoliciesResultOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security policy; malware protection
//
// Returns information about your malware policy actions. Actions specify what happens any time a malware policy is triggered: the issue could be ignored, the request could be denied, or an alert could be generated.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			malwarePolicyActionsAppSecMalwarePolicyActions, err := akamai.LookupAppSecMalwarePolicyActions(ctx, &akamai.LookupAppSecMalwarePolicyActionsArgs{
//				ConfigId:         configuration.ConfigId,
//				SecurityPolicyId: "gms1_134637",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("malwarePolicyActions", malwarePolicyActionsAppSecMalwarePolicyActions.OutputText)
//			return nil
//		})
//	}
//
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `outputText`. Tabular report showing the ID, scanned action, and unscanned action of the malware policy or policies.
func LookupAppSecMalwarePolicyActions(ctx *pulumi.Context, args *LookupAppSecMalwarePolicyActionsArgs, opts ...pulumi.InvokeOption) (*LookupAppSecMalwarePolicyActionsResult, error) {
	var rv LookupAppSecMalwarePolicyActionsResult
	err := ctx.Invoke("akamai:index/getAppSecMalwarePolicyActions:getAppSecMalwarePolicyActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecMalwarePolicyActions.
type LookupAppSecMalwarePolicyActionsArgs struct {
	// . Unique identifier of the security configuration associated with the malware policies and malware policy actions.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the malware policy you want to return action information for. If not included, action information is returned for all malware policies associated with the specified security policy.
	MalwarePolicyId *int `pulumi:"malwarePolicyId"`
	// . Unique identifier of the security policy associated with the malware policies and malware policy actions.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getAppSecMalwarePolicyActions.
type LookupAppSecMalwarePolicyActionsResult struct {
	ConfigId int `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	MalwarePolicyId  *int   `pulumi:"malwarePolicyId"`
	OutputText       string `pulumi:"outputText"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

func LookupAppSecMalwarePolicyActionsOutput(ctx *pulumi.Context, args LookupAppSecMalwarePolicyActionsOutputArgs, opts ...pulumi.InvokeOption) LookupAppSecMalwarePolicyActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppSecMalwarePolicyActionsResult, error) {
			args := v.(LookupAppSecMalwarePolicyActionsArgs)
			r, err := LookupAppSecMalwarePolicyActions(ctx, &args, opts...)
			var s LookupAppSecMalwarePolicyActionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAppSecMalwarePolicyActionsResultOutput)
}

// A collection of arguments for invoking getAppSecMalwarePolicyActions.
type LookupAppSecMalwarePolicyActionsOutputArgs struct {
	// . Unique identifier of the security configuration associated with the malware policies and malware policy actions.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the malware policy you want to return action information for. If not included, action information is returned for all malware policies associated with the specified security policy.
	MalwarePolicyId pulumi.IntPtrInput `pulumi:"malwarePolicyId"`
	// . Unique identifier of the security policy associated with the malware policies and malware policy actions.
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
}

func (LookupAppSecMalwarePolicyActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecMalwarePolicyActionsArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecMalwarePolicyActions.
type LookupAppSecMalwarePolicyActionsResultOutput struct{ *pulumi.OutputState }

func (LookupAppSecMalwarePolicyActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecMalwarePolicyActionsResult)(nil)).Elem()
}

func (o LookupAppSecMalwarePolicyActionsResultOutput) ToLookupAppSecMalwarePolicyActionsResultOutput() LookupAppSecMalwarePolicyActionsResultOutput {
	return o
}

func (o LookupAppSecMalwarePolicyActionsResultOutput) ToLookupAppSecMalwarePolicyActionsResultOutputWithContext(ctx context.Context) LookupAppSecMalwarePolicyActionsResultOutput {
	return o
}

func (o LookupAppSecMalwarePolicyActionsResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAppSecMalwarePolicyActionsResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppSecMalwarePolicyActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecMalwarePolicyActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAppSecMalwarePolicyActionsResultOutput) MalwarePolicyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAppSecMalwarePolicyActionsResult) *int { return v.MalwarePolicyId }).(pulumi.IntPtrOutput)
}

func (o LookupAppSecMalwarePolicyActionsResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecMalwarePolicyActionsResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func (o LookupAppSecMalwarePolicyActionsResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecMalwarePolicyActionsResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppSecMalwarePolicyActionsResultOutput{})
}

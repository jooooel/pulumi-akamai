// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security configuration; security policy
//
// Returns information about your Attack Payload Logging controls. By default, information is returned for all the security policies in the configuration.
// However, you can return data for a single policy by using the `securityPolicyId` parameter.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/logging/attack-payload]
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			attackPayloadLogging, err := akamai.LookupAppsecAdvancedSettingsAttackPayloadLogging(ctx, &akamai.LookupAppsecAdvancedSettingsAttackPayloadLoggingArgs{
//				ConfigId: configuration.ConfigId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("advancedSettingsAttackPayloadLoggingJson", attackPayloadLogging.Json)
//			ctx.Export("advancedSettingsAttackPayloadLoggingOutput", attackPayloadLogging.OutputText)
//			policyOverride, err := akamai.LookupAppsecAdvancedSettingsAttackPayloadLogging(ctx, &akamai.LookupAppsecAdvancedSettingsAttackPayloadLoggingArgs{
//				ConfigId:         configuration.ConfigId,
//				SecurityPolicyId: pulumi.StringRef(_var.Security_policy_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("advancedSettingsPolicyAttackPayloadLoggingOutput", policyOverride.OutputText)
//			ctx.Export("advancedSettingsPolicyAttackPayloadLoggingJson", policyOverride.Json)
//			return nil
//		})
//	}
//
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `json`. JSON-formatted list of information about the Attack Payload Logging settings.
// - `outputText`. Tabular report showing the Attack Payload Logging settings.
func LookupAppsecAdvancedSettingsAttackPayloadLogging(ctx *pulumi.Context, args *LookupAppsecAdvancedSettingsAttackPayloadLoggingArgs, opts ...pulumi.InvokeOption) (*LookupAppsecAdvancedSettingsAttackPayloadLoggingResult, error) {
	var rv LookupAppsecAdvancedSettingsAttackPayloadLoggingResult
	err := ctx.Invoke("akamai:index/getAppsecAdvancedSettingsAttackPayloadLogging:getAppsecAdvancedSettingsAttackPayloadLogging", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppsecAdvancedSettingsAttackPayloadLogging.
type LookupAppsecAdvancedSettingsAttackPayloadLoggingArgs struct {
	// . Unique identifier of the security configuration associated with the Attack Payload Logging settings.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the Attack Payload Logging settings. If not included, information is returned for all your security policies.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getAppsecAdvancedSettingsAttackPayloadLogging.
type LookupAppsecAdvancedSettingsAttackPayloadLoggingResult struct {
	ConfigId int `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	Json             string  `pulumi:"json"`
	OutputText       string  `pulumi:"outputText"`
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

func LookupAppsecAdvancedSettingsAttackPayloadLoggingOutput(ctx *pulumi.Context, args LookupAppsecAdvancedSettingsAttackPayloadLoggingOutputArgs, opts ...pulumi.InvokeOption) LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppsecAdvancedSettingsAttackPayloadLoggingResult, error) {
			args := v.(LookupAppsecAdvancedSettingsAttackPayloadLoggingArgs)
			r, err := LookupAppsecAdvancedSettingsAttackPayloadLogging(ctx, &args, opts...)
			var s LookupAppsecAdvancedSettingsAttackPayloadLoggingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput)
}

// A collection of arguments for invoking getAppsecAdvancedSettingsAttackPayloadLogging.
type LookupAppsecAdvancedSettingsAttackPayloadLoggingOutputArgs struct {
	// . Unique identifier of the security configuration associated with the Attack Payload Logging settings.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the Attack Payload Logging settings. If not included, information is returned for all your security policies.
	SecurityPolicyId pulumi.StringPtrInput `pulumi:"securityPolicyId"`
}

func (LookupAppsecAdvancedSettingsAttackPayloadLoggingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppsecAdvancedSettingsAttackPayloadLoggingArgs)(nil)).Elem()
}

// A collection of values returned by getAppsecAdvancedSettingsAttackPayloadLogging.
type LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput struct{ *pulumi.OutputState }

func (LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppsecAdvancedSettingsAttackPayloadLoggingResult)(nil)).Elem()
}

func (o LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) ToLookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput() LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput {
	return o
}

func (o LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) ToLookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutputWithContext(ctx context.Context) LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput {
	return o
}

func (o LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAppsecAdvancedSettingsAttackPayloadLoggingResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppsecAdvancedSettingsAttackPayloadLoggingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppsecAdvancedSettingsAttackPayloadLoggingResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppsecAdvancedSettingsAttackPayloadLoggingResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func (o LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput) SecurityPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAppsecAdvancedSettingsAttackPayloadLoggingResult) *string { return v.SecurityPolicyId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppsecAdvancedSettingsAttackPayloadLoggingResultOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getDatastreams` data source to list details about the DataStream configuration.
//
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `streams` - Returns the latest versions of the stream configurations for all groups within in your account. You can use the `groupId` parameter to view the latest versions of all configurations in a specific group.
//   - `activationStatus` - The activation status of the stream. These are possible values: `ACTIVATED`, `DEACTIVATED`, `ACTIVATING`, `DEACTIVATING`, or `INACTIVE`. See the [Activate a stream](https://techdocs.akamai.com/datastream2/reference/put-stream-activate) and [Deactivate a stream](https://techdocs.akamai.com/datastream2/reference/put-stream-deactivate) operations.
//   - `archived` - Whether the stream is archived.
//   - `connectors` - The connector where the stream sends logs.
//   - `contractId` - Identifies the contract that the stream is associated with.
//   - `createdBy` - The user who created the stream.
//   - `createdDate` - The date and time when the stream was created in this format: `14-07-2020 07:07:40 GMT`.
//   - `currentVersionId` - Identifies the current version of the stream.
//   - `errors` - Objects that may indicate stream failure errors. Learn more about [Errors](https://techdocs.akamai.com/datastream2/reference/errors).
//   - `detail` - A message informing about the status of the failed stream.
//   - `title` - A descriptive label for the type of error.
//   - `type` - Identifies the error type, either `ACTIVATION_ERROR` or `UNEXPECTED_SYSTEM_ERROR`. In case of these errors, contact support for assistance before continuing.
//   - `groupId` - Identifies the group where the stream is created.
//   - `groupName` - The group name where the stream is created.
//   - `properties` - List of properties associated with the stream.
//   - `propertyId` - The identifier of the property.
//   - `propertyName` - The descriptive label for the property.
//   - `streamId` - A stream's unique identifier.
//   - `streamName` - The name of the stream.
//   - `streamTypeName` - Specifies the type of the data stream. `Logs - Raw` is the only stream type name currently available.
//   - `streamVersionId` - A stream version's unique identifier.
func GetDatastreams(ctx *pulumi.Context, args *GetDatastreamsArgs, opts ...pulumi.InvokeOption) (*GetDatastreamsResult, error) {
	var rv GetDatastreamsResult
	err := ctx.Invoke("akamai:index/getDatastreams:getDatastreams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatastreams.
type GetDatastreamsArgs struct {
	// Unique identifier of the group that can access the product.
	GroupId *string `pulumi:"groupId"`
}

// A collection of values returned by getDatastreams.
type GetDatastreamsResult struct {
	GroupId *string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id      string                 `pulumi:"id"`
	Streams []GetDatastreamsStream `pulumi:"streams"`
}

func GetDatastreamsOutput(ctx *pulumi.Context, args GetDatastreamsOutputArgs, opts ...pulumi.InvokeOption) GetDatastreamsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatastreamsResult, error) {
			args := v.(GetDatastreamsArgs)
			r, err := GetDatastreams(ctx, &args, opts...)
			var s GetDatastreamsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatastreamsResultOutput)
}

// A collection of arguments for invoking getDatastreams.
type GetDatastreamsOutputArgs struct {
	// Unique identifier of the group that can access the product.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
}

func (GetDatastreamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastreamsArgs)(nil)).Elem()
}

// A collection of values returned by getDatastreams.
type GetDatastreamsResultOutput struct{ *pulumi.OutputState }

func (GetDatastreamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastreamsResult)(nil)).Elem()
}

func (o GetDatastreamsResultOutput) ToGetDatastreamsResultOutput() GetDatastreamsResultOutput {
	return o
}

func (o GetDatastreamsResultOutput) ToGetDatastreamsResultOutputWithContext(ctx context.Context) GetDatastreamsResultOutput {
	return o
}

func (o GetDatastreamsResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatastreamsResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatastreamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatastreamsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatastreamsResultOutput) Streams() GetDatastreamsStreamArrayOutput {
	return o.ApplyT(func(v GetDatastreamsResult) []GetDatastreamsStream { return v.Streams }).(GetDatastreamsStreamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatastreamsResultOutput{})
}

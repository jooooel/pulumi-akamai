// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GtmGeomapAssignment {
    /**
     * @return Specifies an array of two-letter ISO 3166 country codes, or for finer subdivisions, the two-letter country code and the two-letter stateOrProvince code separated by a forward slash.
     * 
     */
    private final @Nullable List<String> countries;
    /**
     * @return A unique identifier for an existing data center in the domain.
     * 
     */
    private final Integer datacenterId;
    /**
     * @return A descriptive label for the group.
     * 
     */
    private final String nickname;

    @CustomType.Constructor
    private GtmGeomapAssignment(
        @CustomType.Parameter("countries") @Nullable List<String> countries,
        @CustomType.Parameter("datacenterId") Integer datacenterId,
        @CustomType.Parameter("nickname") String nickname) {
        this.countries = countries;
        this.datacenterId = datacenterId;
        this.nickname = nickname;
    }

    /**
     * @return Specifies an array of two-letter ISO 3166 country codes, or for finer subdivisions, the two-letter country code and the two-letter stateOrProvince code separated by a forward slash.
     * 
     */
    public List<String> countries() {
        return this.countries == null ? List.of() : this.countries;
    }
    /**
     * @return A unique identifier for an existing data center in the domain.
     * 
     */
    public Integer datacenterId() {
        return this.datacenterId;
    }
    /**
     * @return A descriptive label for the group.
     * 
     */
    public String nickname() {
        return this.nickname;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GtmGeomapAssignment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> countries;
        private Integer datacenterId;
        private String nickname;

        public Builder() {
    	      // Empty
        }

        public Builder(GtmGeomapAssignment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.countries = defaults.countries;
    	      this.datacenterId = defaults.datacenterId;
    	      this.nickname = defaults.nickname;
        }

        public Builder countries(@Nullable List<String> countries) {
            this.countries = countries;
            return this;
        }
        public Builder countries(String... countries) {
            return countries(List.of(countries));
        }
        public Builder datacenterId(Integer datacenterId) {
            this.datacenterId = Objects.requireNonNull(datacenterId);
            return this;
        }
        public Builder nickname(String nickname) {
            this.nickname = Objects.requireNonNull(nickname);
            return this;
        }        public GtmGeomapAssignment build() {
            return new GtmGeomapAssignment(countries, datacenterId, nickname);
        }
    }
}

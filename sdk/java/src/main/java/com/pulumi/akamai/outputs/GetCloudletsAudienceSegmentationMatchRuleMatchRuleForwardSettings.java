// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings {
    /**
     * @return - (Optional) The ID of the new origin requests are forwarded to. This type of origin is known as a Conditional Origin. See Property requirements for Cloudlets that forward requests to learn more.
     * 
     */
    private final @Nullable String originId;
    /**
     * @return - (Optional) When match conditions are met, this value defines the path, resource, or query string added to the rewritten URL.
     * 
     */
    private final @Nullable String pathAndQs;
    /**
     * @return - (Optional) Whether the Cloudlet should include the query string from the request in the rewritten or forwarded URL.
     * 
     */
    private final @Nullable Boolean useIncomingQueryString;

    @CustomType.Constructor
    private GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings(
        @CustomType.Parameter("originId") @Nullable String originId,
        @CustomType.Parameter("pathAndQs") @Nullable String pathAndQs,
        @CustomType.Parameter("useIncomingQueryString") @Nullable Boolean useIncomingQueryString) {
        this.originId = originId;
        this.pathAndQs = pathAndQs;
        this.useIncomingQueryString = useIncomingQueryString;
    }

    /**
     * @return - (Optional) The ID of the new origin requests are forwarded to. This type of origin is known as a Conditional Origin. See Property requirements for Cloudlets that forward requests to learn more.
     * 
     */
    public Optional<String> originId() {
        return Optional.ofNullable(this.originId);
    }
    /**
     * @return - (Optional) When match conditions are met, this value defines the path, resource, or query string added to the rewritten URL.
     * 
     */
    public Optional<String> pathAndQs() {
        return Optional.ofNullable(this.pathAndQs);
    }
    /**
     * @return - (Optional) Whether the Cloudlet should include the query string from the request in the rewritten or forwarded URL.
     * 
     */
    public Optional<Boolean> useIncomingQueryString() {
        return Optional.ofNullable(this.useIncomingQueryString);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String originId;
        private @Nullable String pathAndQs;
        private @Nullable Boolean useIncomingQueryString;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.originId = defaults.originId;
    	      this.pathAndQs = defaults.pathAndQs;
    	      this.useIncomingQueryString = defaults.useIncomingQueryString;
        }

        public Builder originId(@Nullable String originId) {
            this.originId = originId;
            return this;
        }
        public Builder pathAndQs(@Nullable String pathAndQs) {
            this.pathAndQs = pathAndQs;
            return this;
        }
        public Builder useIncomingQueryString(@Nullable Boolean useIncomingQueryString) {
            this.useIncomingQueryString = useIncomingQueryString;
            return this;
        }        public GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings build() {
            return new GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings(originId, pathAndQs, useIncomingQueryString);
        }
    }
}

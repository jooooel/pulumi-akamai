// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecIPGeoArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSecIPGeoArgs Empty = new AppSecIPGeoArgs();

    /**
     * . Unique identifier of the security configuration associated with the IP/Geo lists being modified.
     * 
     */
    @Import(name="configId", required=true)
    private Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the IP/Geo lists being modified.
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }

    /**
     * . JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.
     * 
     */
    @Import(name="exceptionIpNetworkLists")
    private @Nullable Output<List<String>> exceptionIpNetworkLists;

    /**
     * @return . JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.
     * 
     */
    public Optional<Output<List<String>>> exceptionIpNetworkLists() {
        return Optional.ofNullable(this.exceptionIpNetworkLists);
    }

    /**
     * . JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
     * 
     */
    @Import(name="geoNetworkLists")
    private @Nullable Output<List<String>> geoNetworkLists;

    /**
     * @return . JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
     * 
     */
    public Optional<Output<List<String>>> geoNetworkLists() {
        return Optional.ofNullable(this.geoNetworkLists);
    }

    /**
     * . JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
     * 
     */
    @Import(name="ipNetworkLists")
    private @Nullable Output<List<String>> ipNetworkLists;

    /**
     * @return . JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
     * 
     */
    public Optional<Output<List<String>>> ipNetworkLists() {
        return Optional.ofNullable(this.ipNetworkLists);
    }

    /**
     * . Set to **block** to prevent the specified network lists from being allowed through the firewall: all other entities will be allowed to pass through the firewall. Set to **allow** to allow the specified network lists to pass through the firewall; all other entities will be prevented from passing through the firewall.
     * 
     */
    @Import(name="mode", required=true)
    private Output<String> mode;

    /**
     * @return . Set to **block** to prevent the specified network lists from being allowed through the firewall: all other entities will be allowed to pass through the firewall. Set to **allow** to allow the specified network lists to pass through the firewall; all other entities will be prevented from passing through the firewall.
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }

    /**
     * . Unique identifier of the security policy associated with the IP/Geo lists being modified.
     * 
     */
    @Import(name="securityPolicyId", required=true)
    private Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the IP/Geo lists being modified.
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }

    private AppSecIPGeoArgs() {}

    private AppSecIPGeoArgs(AppSecIPGeoArgs $) {
        this.configId = $.configId;
        this.exceptionIpNetworkLists = $.exceptionIpNetworkLists;
        this.geoNetworkLists = $.geoNetworkLists;
        this.ipNetworkLists = $.ipNetworkLists;
        this.mode = $.mode;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecIPGeoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecIPGeoArgs $;

        public Builder() {
            $ = new AppSecIPGeoArgs();
        }

        public Builder(AppSecIPGeoArgs defaults) {
            $ = new AppSecIPGeoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the IP/Geo lists being modified.
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the IP/Geo lists being modified.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param exceptionIpNetworkLists . JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.
         * 
         * @return builder
         * 
         */
        public Builder exceptionIpNetworkLists(@Nullable Output<List<String>> exceptionIpNetworkLists) {
            $.exceptionIpNetworkLists = exceptionIpNetworkLists;
            return this;
        }

        /**
         * @param exceptionIpNetworkLists . JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.
         * 
         * @return builder
         * 
         */
        public Builder exceptionIpNetworkLists(List<String> exceptionIpNetworkLists) {
            return exceptionIpNetworkLists(Output.of(exceptionIpNetworkLists));
        }

        /**
         * @param exceptionIpNetworkLists . JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.
         * 
         * @return builder
         * 
         */
        public Builder exceptionIpNetworkLists(String... exceptionIpNetworkLists) {
            return exceptionIpNetworkLists(List.of(exceptionIpNetworkLists));
        }

        /**
         * @param geoNetworkLists . JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder geoNetworkLists(@Nullable Output<List<String>> geoNetworkLists) {
            $.geoNetworkLists = geoNetworkLists;
            return this;
        }

        /**
         * @param geoNetworkLists . JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder geoNetworkLists(List<String> geoNetworkLists) {
            return geoNetworkLists(Output.of(geoNetworkLists));
        }

        /**
         * @param geoNetworkLists . JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder geoNetworkLists(String... geoNetworkLists) {
            return geoNetworkLists(List.of(geoNetworkLists));
        }

        /**
         * @param ipNetworkLists . JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder ipNetworkLists(@Nullable Output<List<String>> ipNetworkLists) {
            $.ipNetworkLists = ipNetworkLists;
            return this;
        }

        /**
         * @param ipNetworkLists . JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder ipNetworkLists(List<String> ipNetworkLists) {
            return ipNetworkLists(Output.of(ipNetworkLists));
        }

        /**
         * @param ipNetworkLists . JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder ipNetworkLists(String... ipNetworkLists) {
            return ipNetworkLists(List.of(ipNetworkLists));
        }

        /**
         * @param mode . Set to **block** to prevent the specified network lists from being allowed through the firewall: all other entities will be allowed to pass through the firewall. Set to **allow** to allow the specified network lists to pass through the firewall; all other entities will be prevented from passing through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder mode(Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode . Set to **block** to prevent the specified network lists from being allowed through the firewall: all other entities will be allowed to pass through the firewall. Set to **allow** to allow the specified network lists to pass through the firewall; all other entities will be prevented from passing through the firewall.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the IP/Geo lists being modified.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the IP/Geo lists being modified.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppSecIPGeoArgs build() {
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            $.mode = Objects.requireNonNull($.mode, "expected parameter 'mode' to be non-null");
            $.securityPolicyId = Objects.requireNonNull($.securityPolicyId, "expected parameter 'securityPolicyId' to be non-null");
            return $;
        }
    }

}

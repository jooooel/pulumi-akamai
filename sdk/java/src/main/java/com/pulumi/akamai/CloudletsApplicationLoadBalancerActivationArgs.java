// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class CloudletsApplicationLoadBalancerActivationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudletsApplicationLoadBalancerActivationArgs Empty = new CloudletsApplicationLoadBalancerActivationArgs();

    /**
     * The network you want to activate the policy version on, either `staging`, `stag`,  and `s` for the Staging network, or `production`, `prod`, and `p` for the Production network. All values are case insensitive.
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return The network you want to activate the policy version on, either `staging`, `stag`,  and `s` for the Staging network, or `production`, `prod`, and `p` for the Production network. All values are case insensitive.
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
     * 
     */
    @Import(name="originId", required=true)
    private Output<String> originId;

    /**
     * @return The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
     * 
     */
    public Output<String> originId() {
        return this.originId;
    }

    /**
     * The Application Load Balancer Cloudlet configuration version you want to activate.
     * 
     */
    @Import(name="version", required=true)
    private Output<Integer> version;

    /**
     * @return The Application Load Balancer Cloudlet configuration version you want to activate.
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    private CloudletsApplicationLoadBalancerActivationArgs() {}

    private CloudletsApplicationLoadBalancerActivationArgs(CloudletsApplicationLoadBalancerActivationArgs $) {
        this.network = $.network;
        this.originId = $.originId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudletsApplicationLoadBalancerActivationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudletsApplicationLoadBalancerActivationArgs $;

        public Builder() {
            $ = new CloudletsApplicationLoadBalancerActivationArgs();
        }

        public Builder(CloudletsApplicationLoadBalancerActivationArgs defaults) {
            $ = new CloudletsApplicationLoadBalancerActivationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param network The network you want to activate the policy version on, either `staging`, `stag`,  and `s` for the Staging network, or `production`, `prod`, and `p` for the Production network. All values are case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The network you want to activate the policy version on, either `staging`, `stag`,  and `s` for the Staging network, or `production`, `prod`, and `p` for the Production network. All values are case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param originId The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
         * 
         * @return builder
         * 
         */
        public Builder originId(Output<String> originId) {
            $.originId = originId;
            return this;
        }

        /**
         * @param originId The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
         * 
         * @return builder
         * 
         */
        public Builder originId(String originId) {
            return originId(Output.of(originId));
        }

        /**
         * @param version The Application Load Balancer Cloudlet configuration version you want to activate.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The Application Load Balancer Cloudlet configuration version you want to activate.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CloudletsApplicationLoadBalancerActivationArgs build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.originId = Objects.requireNonNull($.originId, "expected parameter 'originId' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}

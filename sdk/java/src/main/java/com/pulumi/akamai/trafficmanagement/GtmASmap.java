// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.trafficmanagement;

import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.trafficmanagement.GtmASmapArgs;
import com.pulumi.akamai.trafficmanagement.inputs.GtmASmapState;
import com.pulumi.akamai.trafficmanagement.outputs.GtmASmapAssignment;
import com.pulumi.akamai.trafficmanagement.outputs.GtmASmapDefaultDatacenter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use the `akamai.GtmAsmap` resource to create, configure, and import a GTM Autonomous System (AS) map. AS mapping lets you configure a GTM property that returns a CNAME based on the AS number associated with the requester&#39;s IP address.
 * 
 * You can reuse maps for multiple properties or create new ones. AS maps split the Internet into multiple AS block zones. Properties that use AS maps can specify handout integers for each zone. AS mapping lets you configure a property that directs users to a specific environment or to the origin.
 * 
 * &gt; **Note** Import requires an ID with this format: `existing_domain_name`:`existing_map_name`.
 * 
 * ## Example Usage
 * 
 * Basic usage:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.akamai.GtmAsmap;
 * import com.pulumi.akamai.GtmAsmapArgs;
 * import com.pulumi.akamai.inputs.GtmAsmapDefaultDatacenterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var demoAsmap = new GtmAsmap(&#34;demoAsmap&#34;, GtmAsmapArgs.builder()        
 *             .defaultDatacenter(GtmAsmapDefaultDatacenterArgs.builder()
 *                 .datacenterId(5400)
 *                 .nickname(&#34;All Other AS numbers&#34;)
 *                 .build())
 *             .domain(&#34;demo_domain.akadns.net&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Schema reference
 * 
 * You can download the GTM AS Map backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#asmap) page.
 * 
 * @deprecated
 * akamai.trafficmanagement.GtmASmap has been deprecated in favor of akamai.GtmAsmap
 * 
 */
@Deprecated /* akamai.trafficmanagement.GtmASmap has been deprecated in favor of akamai.GtmAsmap */
@ResourceType(type="akamai:trafficmanagement/gtmASmap:GtmASmap")
public class GtmASmap extends com.pulumi.resources.CustomResource {
    /**
     * Contains information about the AS zone groupings of AS IDs. You can have multiple entries with this argument. If used, requires these arguments:
     * 
     */
    @Export(name="assignments", type=List.class, parameters={GtmASmapAssignment.class})
    private Output</* @Nullable */ List<GtmASmapAssignment>> assignments;

    /**
     * @return Contains information about the AS zone groupings of AS IDs. You can have multiple entries with this argument. If used, requires these arguments:
     * 
     */
    public Output<Optional<List<GtmASmapAssignment>>> assignments() {
        return Codegen.optional(this.assignments);
    }
    /**
     * A placeholder for all other AS zones not found in these AS zones. Requires these additional arguments:
     * 
     */
    @Export(name="defaultDatacenter", type=GtmASmapDefaultDatacenter.class, parameters={})
    private Output<GtmASmapDefaultDatacenter> defaultDatacenter;

    /**
     * @return A placeholder for all other AS zones not found in these AS zones. Requires these additional arguments:
     * 
     */
    public Output<GtmASmapDefaultDatacenter> defaultDatacenter() {
        return this.defaultDatacenter;
    }
    /**
     * The GTM Domain name for the AS map.
     * 
     */
    @Export(name="domain", type=String.class, parameters={})
    private Output<String> domain;

    /**
     * @return The GTM Domain name for the AS map.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * A descriptive label for the AS map. Properties set up for  AS mapping can use this as reference.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A descriptive label for the AS map. Properties set up for  AS mapping can use this as reference.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A boolean that, if `true`, waits for transaction to complete.
     * 
     */
    @Export(name="waitOnComplete", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitOnComplete;

    /**
     * @return A boolean that, if `true`, waits for transaction to complete.
     * 
     */
    public Output<Optional<Boolean>> waitOnComplete() {
        return Codegen.optional(this.waitOnComplete);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GtmASmap(String name) {
        this(name, GtmASmapArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GtmASmap(String name, GtmASmapArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GtmASmap(String name, GtmASmapArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:trafficmanagement/gtmASmap:GtmASmap", name, args == null ? GtmASmapArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GtmASmap(String name, Output<String> id, @Nullable GtmASmapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:trafficmanagement/gtmASmap:GtmASmap", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GtmASmap get(String name, Output<String> id, @Nullable GtmASmapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GtmASmap(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.DatastreamConfigFrequencyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastreamConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatastreamConfigArgs Empty = new DatastreamConfigArgs();

    @Import(name="delimiter")
    private @Nullable Output<String> delimiter;

    public Optional<Output<String>> delimiter() {
        return Optional.ofNullable(this.delimiter);
    }

    @Import(name="format", required=true)
    private Output<String> format;

    public Output<String> format() {
        return this.format;
    }

    @Import(name="frequency", required=true)
    private Output<DatastreamConfigFrequencyArgs> frequency;

    public Output<DatastreamConfigFrequencyArgs> frequency() {
        return this.frequency;
    }

    @Import(name="uploadFilePrefix")
    private @Nullable Output<String> uploadFilePrefix;

    public Optional<Output<String>> uploadFilePrefix() {
        return Optional.ofNullable(this.uploadFilePrefix);
    }

    @Import(name="uploadFileSuffix")
    private @Nullable Output<String> uploadFileSuffix;

    public Optional<Output<String>> uploadFileSuffix() {
        return Optional.ofNullable(this.uploadFileSuffix);
    }

    private DatastreamConfigArgs() {}

    private DatastreamConfigArgs(DatastreamConfigArgs $) {
        this.delimiter = $.delimiter;
        this.format = $.format;
        this.frequency = $.frequency;
        this.uploadFilePrefix = $.uploadFilePrefix;
        this.uploadFileSuffix = $.uploadFileSuffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastreamConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastreamConfigArgs $;

        public Builder() {
            $ = new DatastreamConfigArgs();
        }

        public Builder(DatastreamConfigArgs defaults) {
            $ = new DatastreamConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder delimiter(@Nullable Output<String> delimiter) {
            $.delimiter = delimiter;
            return this;
        }

        public Builder delimiter(String delimiter) {
            return delimiter(Output.of(delimiter));
        }

        public Builder format(Output<String> format) {
            $.format = format;
            return this;
        }

        public Builder format(String format) {
            return format(Output.of(format));
        }

        public Builder frequency(Output<DatastreamConfigFrequencyArgs> frequency) {
            $.frequency = frequency;
            return this;
        }

        public Builder frequency(DatastreamConfigFrequencyArgs frequency) {
            return frequency(Output.of(frequency));
        }

        public Builder uploadFilePrefix(@Nullable Output<String> uploadFilePrefix) {
            $.uploadFilePrefix = uploadFilePrefix;
            return this;
        }

        public Builder uploadFilePrefix(String uploadFilePrefix) {
            return uploadFilePrefix(Output.of(uploadFilePrefix));
        }

        public Builder uploadFileSuffix(@Nullable Output<String> uploadFileSuffix) {
            $.uploadFileSuffix = uploadFileSuffix;
            return this;
        }

        public Builder uploadFileSuffix(String uploadFileSuffix) {
            return uploadFileSuffix(Output.of(uploadFileSuffix));
        }

        public DatastreamConfigArgs build() {
            $.format = Objects.requireNonNull($.format, "expected parameter 'format' to be non-null");
            $.frequency = Objects.requireNonNull($.frequency, "expected parameter 'frequency' to be non-null");
            return $;
        }
    }

}

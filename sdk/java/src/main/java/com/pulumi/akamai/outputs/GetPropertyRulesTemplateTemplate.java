// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertyRulesTemplateTemplate {
    /**
     * @return The content of the JSON template as a string.
     * 
     */
    private final String templateData;
    /**
     * @return The absolute or relative path to the directory containing the template files. The path must end with `property-snippets`, the required directory name. For example: `template_dir = abspath(&#34;${path.root}/property-snippets/&#34;)`, or `template_dir = &#34;property-snippets/&#34;`.
     * 
     */
    private final String templateDir;

    @CustomType.Constructor
    private GetPropertyRulesTemplateTemplate(
        @CustomType.Parameter("templateData") String templateData,
        @CustomType.Parameter("templateDir") String templateDir) {
        this.templateData = templateData;
        this.templateDir = templateDir;
    }

    /**
     * @return The content of the JSON template as a string.
     * 
     */
    public String templateData() {
        return this.templateData;
    }
    /**
     * @return The absolute or relative path to the directory containing the template files. The path must end with `property-snippets`, the required directory name. For example: `template_dir = abspath(&#34;${path.root}/property-snippets/&#34;)`, or `template_dir = &#34;property-snippets/&#34;`.
     * 
     */
    public String templateDir() {
        return this.templateDir;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesTemplateTemplate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String templateData;
        private String templateDir;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPropertyRulesTemplateTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.templateData = defaults.templateData;
    	      this.templateDir = defaults.templateDir;
        }

        public Builder templateData(String templateData) {
            this.templateData = Objects.requireNonNull(templateData);
            return this;
        }
        public Builder templateDir(String templateDir) {
            this.templateDir = Objects.requireNonNull(templateDir);
            return this;
        }        public GetPropertyRulesTemplateTemplate build() {
            return new GetPropertyRulesTemplateTemplate(templateData, templateDir);
        }
    }
}

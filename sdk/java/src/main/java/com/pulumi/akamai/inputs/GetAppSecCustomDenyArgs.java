// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAppSecCustomDenyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAppSecCustomDenyArgs Empty = new GetAppSecCustomDenyArgs();

    /**
     * . Unique identifier of the security configuration associated with the custom denies.
     * 
     */
    @Import(name="configId", required=true)
    private Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the custom denies.
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }

    /**
     * . Unique identifier of the custom deny you want to return information for. If not included. information is returned for all your custom denies.
     * 
     */
    @Import(name="customDenyId")
    private @Nullable Output<String> customDenyId;

    /**
     * @return . Unique identifier of the custom deny you want to return information for. If not included. information is returned for all your custom denies.
     * 
     */
    public Optional<Output<String>> customDenyId() {
        return Optional.ofNullable(this.customDenyId);
    }

    private GetAppSecCustomDenyArgs() {}

    private GetAppSecCustomDenyArgs(GetAppSecCustomDenyArgs $) {
        this.configId = $.configId;
        this.customDenyId = $.customDenyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppSecCustomDenyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppSecCustomDenyArgs $;

        public Builder() {
            $ = new GetAppSecCustomDenyArgs();
        }

        public Builder(GetAppSecCustomDenyArgs defaults) {
            $ = new GetAppSecCustomDenyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the custom denies.
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the custom denies.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param customDenyId . Unique identifier of the custom deny you want to return information for. If not included. information is returned for all your custom denies.
         * 
         * @return builder
         * 
         */
        public Builder customDenyId(@Nullable Output<String> customDenyId) {
            $.customDenyId = customDenyId;
            return this;
        }

        /**
         * @param customDenyId . Unique identifier of the custom deny you want to return information for. If not included. information is returned for all your custom denies.
         * 
         * @return builder
         * 
         */
        public Builder customDenyId(String customDenyId) {
            return customDenyId(Output.of(customDenyId));
        }

        public GetAppSecCustomDenyArgs build() {
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            return $;
        }
    }

}

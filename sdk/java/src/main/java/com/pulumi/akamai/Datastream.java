// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.DatastreamArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.DatastreamState;
import com.pulumi.akamai.outputs.DatastreamAzureConnector;
import com.pulumi.akamai.outputs.DatastreamConfig;
import com.pulumi.akamai.outputs.DatastreamDatadogConnector;
import com.pulumi.akamai.outputs.DatastreamElasticsearchConnector;
import com.pulumi.akamai.outputs.DatastreamGcsConnector;
import com.pulumi.akamai.outputs.DatastreamHttpsConnector;
import com.pulumi.akamai.outputs.DatastreamLogglyConnector;
import com.pulumi.akamai.outputs.DatastreamNewRelicConnector;
import com.pulumi.akamai.outputs.DatastreamOracleConnector;
import com.pulumi.akamai.outputs.DatastreamS3Connector;
import com.pulumi.akamai.outputs.DatastreamSplunkConnector;
import com.pulumi.akamai.outputs.DatastreamSumologicConnector;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="akamai:index/datastream:Datastream")
public class Datastream extends com.pulumi.resources.CustomResource {
    /**
     * Defining if stream should be active or not
     * 
     */
    @Export(name="active", type=Boolean.class, parameters={})
    private Output<Boolean> active;

    /**
     * @return Defining if stream should be active or not
     * 
     */
    public Output<Boolean> active() {
        return this.active;
    }
    @Export(name="azureConnector", type=DatastreamAzureConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamAzureConnector> azureConnector;

    public Output<Optional<DatastreamAzureConnector>> azureConnector() {
        return Codegen.optional(this.azureConnector);
    }
    /**
     * Provides information about the configuration related to logs (format, file names, delivery frequency)
     * 
     */
    @Export(name="config", type=DatastreamConfig.class, parameters={})
    private Output<DatastreamConfig> config;

    /**
     * @return Provides information about the configuration related to logs (format, file names, delivery frequency)
     * 
     */
    public Output<DatastreamConfig> config() {
        return this.config;
    }
    /**
     * Identifies the contract that has access to the product
     * 
     */
    @Export(name="contractId", type=String.class, parameters={})
    private Output<String> contractId;

    /**
     * @return Identifies the contract that has access to the product
     * 
     */
    public Output<String> contractId() {
        return this.contractId;
    }
    /**
     * The username who created the stream
     * 
     */
    @Export(name="createdBy", type=String.class, parameters={})
    private Output<String> createdBy;

    /**
     * @return The username who created the stream
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * The date and time when the stream was created
     * 
     */
    @Export(name="createdDate", type=String.class, parameters={})
    private Output<String> createdDate;

    /**
     * @return The date and time when the stream was created
     * 
     */
    public Output<String> createdDate() {
        return this.createdDate;
    }
    @Export(name="datadogConnector", type=DatastreamDatadogConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamDatadogConnector> datadogConnector;

    public Output<Optional<DatastreamDatadogConnector>> datadogConnector() {
        return Codegen.optional(this.datadogConnector);
    }
    /**
     * A list of data set fields selected from the associated template that the stream monitors in logs. The order of the
     * identifiers define how the value for these fields appear in the log lines
     * 
     */
    @Export(name="datasetFieldsIds", type=List.class, parameters={Integer.class})
    private Output<List<Integer>> datasetFieldsIds;

    /**
     * @return A list of data set fields selected from the associated template that the stream monitors in logs. The order of the
     * identifiers define how the value for these fields appear in the log lines
     * 
     */
    public Output<List<Integer>> datasetFieldsIds() {
        return this.datasetFieldsIds;
    }
    @Export(name="elasticsearchConnector", type=DatastreamElasticsearchConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamElasticsearchConnector> elasticsearchConnector;

    public Output<Optional<DatastreamElasticsearchConnector>> elasticsearchConnector() {
        return Codegen.optional(this.elasticsearchConnector);
    }
    /**
     * List of email addresses where the system sends notifications about activations and deactivations of the stream
     * 
     */
    @Export(name="emailIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> emailIds;

    /**
     * @return List of email addresses where the system sends notifications about activations and deactivations of the stream
     * 
     */
    public Output<Optional<List<String>>> emailIds() {
        return Codegen.optional(this.emailIds);
    }
    @Export(name="gcsConnector", type=DatastreamGcsConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamGcsConnector> gcsConnector;

    public Output<Optional<DatastreamGcsConnector>> gcsConnector() {
        return Codegen.optional(this.gcsConnector);
    }
    /**
     * Identifies the group that has access to the product and for which the stream configuration was created
     * 
     */
    @Export(name="groupId", type=String.class, parameters={})
    private Output<String> groupId;

    /**
     * @return Identifies the group that has access to the product and for which the stream configuration was created
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }
    /**
     * The name of the user group for which the stream was created
     * 
     */
    @Export(name="groupName", type=String.class, parameters={})
    private Output<String> groupName;

    /**
     * @return The name of the user group for which the stream was created
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }
    @Export(name="httpsConnector", type=DatastreamHttpsConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamHttpsConnector> httpsConnector;

    public Output<Optional<DatastreamHttpsConnector>> httpsConnector() {
        return Codegen.optional(this.httpsConnector);
    }
    @Export(name="logglyConnector", type=DatastreamLogglyConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamLogglyConnector> logglyConnector;

    public Output<Optional<DatastreamLogglyConnector>> logglyConnector() {
        return Codegen.optional(this.logglyConnector);
    }
    /**
     * The username who modified the stream
     * 
     */
    @Export(name="modifiedBy", type=String.class, parameters={})
    private Output<String> modifiedBy;

    /**
     * @return The username who modified the stream
     * 
     */
    public Output<String> modifiedBy() {
        return this.modifiedBy;
    }
    /**
     * The date and time when the stream was modified
     * 
     */
    @Export(name="modifiedDate", type=String.class, parameters={})
    private Output<String> modifiedDate;

    /**
     * @return The date and time when the stream was modified
     * 
     */
    public Output<String> modifiedDate() {
        return this.modifiedDate;
    }
    @Export(name="newRelicConnector", type=DatastreamNewRelicConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamNewRelicConnector> newRelicConnector;

    public Output<Optional<DatastreamNewRelicConnector>> newRelicConnector() {
        return Codegen.optional(this.newRelicConnector);
    }
    @Export(name="oracleConnector", type=DatastreamOracleConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamOracleConnector> oracleConnector;

    public Output<Optional<DatastreamOracleConnector>> oracleConnector() {
        return Codegen.optional(this.oracleConnector);
    }
    /**
     * The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior
     * 
     */
    @Export(name="papiJson", type=String.class, parameters={})
    private Output<String> papiJson;

    /**
     * @return The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior
     * 
     */
    public Output<String> papiJson() {
        return this.papiJson;
    }
    /**
     * The ID of the product for which the stream was created
     * 
     */
    @Export(name="productId", type=String.class, parameters={})
    private Output<String> productId;

    /**
     * @return The ID of the product for which the stream was created
     * 
     */
    public Output<String> productId() {
        return this.productId;
    }
    /**
     * The name of the product for which the stream was created
     * 
     */
    @Export(name="productName", type=String.class, parameters={})
    private Output<String> productName;

    /**
     * @return The name of the product for which the stream was created
     * 
     */
    public Output<String> productName() {
        return this.productName;
    }
    /**
     * Identifies the properties monitored in the stream
     * 
     */
    @Export(name="propertyIds", type=List.class, parameters={String.class})
    private Output<List<String>> propertyIds;

    /**
     * @return Identifies the properties monitored in the stream
     * 
     */
    public Output<List<String>> propertyIds() {
        return this.propertyIds;
    }
    @Export(name="s3Connector", type=DatastreamS3Connector.class, parameters={})
    private Output</* @Nullable */ DatastreamS3Connector> s3Connector;

    public Output<Optional<DatastreamS3Connector>> s3Connector() {
        return Codegen.optional(this.s3Connector);
    }
    @Export(name="splunkConnector", type=DatastreamSplunkConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamSplunkConnector> splunkConnector;

    public Output<Optional<DatastreamSplunkConnector>> splunkConnector() {
        return Codegen.optional(this.splunkConnector);
    }
    /**
     * The name of the stream
     * 
     */
    @Export(name="streamName", type=String.class, parameters={})
    private Output<String> streamName;

    /**
     * @return The name of the stream
     * 
     */
    public Output<String> streamName() {
        return this.streamName;
    }
    /**
     * Specifies the type of the data stream
     * 
     */
    @Export(name="streamType", type=String.class, parameters={})
    private Output<String> streamType;

    /**
     * @return Specifies the type of the data stream
     * 
     */
    public Output<String> streamType() {
        return this.streamType;
    }
    /**
     * Identifies the configuration version of the stream
     * 
     */
    @Export(name="streamVersionId", type=Integer.class, parameters={})
    private Output<Integer> streamVersionId;

    /**
     * @return Identifies the configuration version of the stream
     * 
     */
    public Output<Integer> streamVersionId() {
        return this.streamVersionId;
    }
    @Export(name="sumologicConnector", type=DatastreamSumologicConnector.class, parameters={})
    private Output</* @Nullable */ DatastreamSumologicConnector> sumologicConnector;

    public Output<Optional<DatastreamSumologicConnector>> sumologicConnector() {
        return Codegen.optional(this.sumologicConnector);
    }
    /**
     * The name of the template associated with the stream
     * 
     */
    @Export(name="templateName", type=String.class, parameters={})
    private Output<String> templateName;

    /**
     * @return The name of the template associated with the stream
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Datastream(String name) {
        this(name, DatastreamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Datastream(String name, DatastreamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Datastream(String name, DatastreamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/datastream:Datastream", name, args == null ? DatastreamArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Datastream(String name, Output<String> id, @Nullable DatastreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/datastream:Datastream", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Datastream get(String name, Output<String> id, @Nullable DatastreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Datastream(name, id, state, options);
    }
}

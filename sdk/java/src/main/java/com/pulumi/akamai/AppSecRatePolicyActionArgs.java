// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class AppSecRatePolicyActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSecRatePolicyActionArgs Empty = new AppSecRatePolicyActionArgs();

    /**
     * . Unique identifier of the security configuration associated with the rate policy action being modified.
     * 
     */
    @Import(name="configId", required=true)
    private Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the rate policy action being modified.
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }

    /**
     * . Rate policy action for requests coming from an IPv4 IP address. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     * 
     */
    @Import(name="ipv4Action", required=true)
    private Output<String> ipv4Action;

    /**
     * @return . Rate policy action for requests coming from an IPv4 IP address. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     * 
     */
    public Output<String> ipv4Action() {
        return this.ipv4Action;
    }

    /**
     * . Rate policy action for requests coming from an IPv6 IP address. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * 
     */
    @Import(name="ipv6Action", required=true)
    private Output<String> ipv6Action;

    /**
     * @return . Rate policy action for requests coming from an IPv6 IP address. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * 
     */
    public Output<String> ipv6Action() {
        return this.ipv6Action;
    }

    /**
     * . Unique identifier of the rate policy whose action is being modified.
     * 
     */
    @Import(name="ratePolicyId", required=true)
    private Output<Integer> ratePolicyId;

    /**
     * @return . Unique identifier of the rate policy whose action is being modified.
     * 
     */
    public Output<Integer> ratePolicyId() {
        return this.ratePolicyId;
    }

    /**
     * . Unique identifier of the security policy associated with the rate policy whose action is being modified.
     * 
     */
    @Import(name="securityPolicyId", required=true)
    private Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the rate policy whose action is being modified.
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }

    private AppSecRatePolicyActionArgs() {}

    private AppSecRatePolicyActionArgs(AppSecRatePolicyActionArgs $) {
        this.configId = $.configId;
        this.ipv4Action = $.ipv4Action;
        this.ipv6Action = $.ipv6Action;
        this.ratePolicyId = $.ratePolicyId;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecRatePolicyActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecRatePolicyActionArgs $;

        public Builder() {
            $ = new AppSecRatePolicyActionArgs();
        }

        public Builder(AppSecRatePolicyActionArgs defaults) {
            $ = new AppSecRatePolicyActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the rate policy action being modified.
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the rate policy action being modified.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param ipv4Action . Rate policy action for requests coming from an IPv4 IP address. Allowed actions are:
         * - **alert**. Record the event.
         * - **deny**. Block the request.
         * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
         * - **none**. Take no action.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Action(Output<String> ipv4Action) {
            $.ipv4Action = ipv4Action;
            return this;
        }

        /**
         * @param ipv4Action . Rate policy action for requests coming from an IPv4 IP address. Allowed actions are:
         * - **alert**. Record the event.
         * - **deny**. Block the request.
         * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
         * - **none**. Take no action.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Action(String ipv4Action) {
            return ipv4Action(Output.of(ipv4Action));
        }

        /**
         * @param ipv6Action . Rate policy action for requests coming from an IPv6 IP address. Allowed actions are:
         * - **alert**. Record the event.
         * - **deny**. Block the request.
         * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Action(Output<String> ipv6Action) {
            $.ipv6Action = ipv6Action;
            return this;
        }

        /**
         * @param ipv6Action . Rate policy action for requests coming from an IPv6 IP address. Allowed actions are:
         * - **alert**. Record the event.
         * - **deny**. Block the request.
         * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Action(String ipv6Action) {
            return ipv6Action(Output.of(ipv6Action));
        }

        /**
         * @param ratePolicyId . Unique identifier of the rate policy whose action is being modified.
         * 
         * @return builder
         * 
         */
        public Builder ratePolicyId(Output<Integer> ratePolicyId) {
            $.ratePolicyId = ratePolicyId;
            return this;
        }

        /**
         * @param ratePolicyId . Unique identifier of the rate policy whose action is being modified.
         * 
         * @return builder
         * 
         */
        public Builder ratePolicyId(Integer ratePolicyId) {
            return ratePolicyId(Output.of(ratePolicyId));
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the rate policy whose action is being modified.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the rate policy whose action is being modified.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppSecRatePolicyActionArgs build() {
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            $.ipv4Action = Objects.requireNonNull($.ipv4Action, "expected parameter 'ipv4Action' to be non-null");
            $.ipv6Action = Objects.requireNonNull($.ipv6Action, "expected parameter 'ipv6Action' to be non-null");
            $.ratePolicyId = Objects.requireNonNull($.ratePolicyId, "expected parameter 'ratePolicyId' to be non-null");
            $.securityPolicyId = Objects.requireNonNull($.securityPolicyId, "expected parameter 'securityPolicyId' to be non-null");
            return $;
        }
    }

}

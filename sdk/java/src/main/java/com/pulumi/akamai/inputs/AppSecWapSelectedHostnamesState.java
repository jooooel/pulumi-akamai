// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecWapSelectedHostnamesState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecWapSelectedHostnamesState Empty = new AppSecWapSelectedHostnamesState();

    /**
     * . Unique identifier of the security configuration associated with the hostnames being protected or evaluated.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the hostnames being protected or evaluated.
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    @Import(name="evaluatedHosts")
    private @Nullable Output<List<String>> evaluatedHosts;

    public Optional<Output<List<String>>> evaluatedHosts() {
        return Optional.ofNullable(this.evaluatedHosts);
    }

    @Import(name="protectedHosts")
    private @Nullable Output<List<String>> protectedHosts;

    public Optional<Output<List<String>>> protectedHosts() {
        return Optional.ofNullable(this.protectedHosts);
    }

    /**
     * . Unique identifier of the security policy responsible for protecting or evaluating the specified hosts.
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy responsible for protecting or evaluating the specified hosts.
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    private AppSecWapSelectedHostnamesState() {}

    private AppSecWapSelectedHostnamesState(AppSecWapSelectedHostnamesState $) {
        this.configId = $.configId;
        this.evaluatedHosts = $.evaluatedHosts;
        this.protectedHosts = $.protectedHosts;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecWapSelectedHostnamesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecWapSelectedHostnamesState $;

        public Builder() {
            $ = new AppSecWapSelectedHostnamesState();
        }

        public Builder(AppSecWapSelectedHostnamesState defaults) {
            $ = new AppSecWapSelectedHostnamesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the hostnames being protected or evaluated.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the hostnames being protected or evaluated.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        public Builder evaluatedHosts(@Nullable Output<List<String>> evaluatedHosts) {
            $.evaluatedHosts = evaluatedHosts;
            return this;
        }

        public Builder evaluatedHosts(List<String> evaluatedHosts) {
            return evaluatedHosts(Output.of(evaluatedHosts));
        }

        public Builder evaluatedHosts(String... evaluatedHosts) {
            return evaluatedHosts(List.of(evaluatedHosts));
        }

        public Builder protectedHosts(@Nullable Output<List<String>> protectedHosts) {
            $.protectedHosts = protectedHosts;
            return this;
        }

        public Builder protectedHosts(List<String> protectedHosts) {
            return protectedHosts(Output.of(protectedHosts));
        }

        public Builder protectedHosts(String... protectedHosts) {
            return protectedHosts(List.of(protectedHosts));
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy responsible for protecting or evaluating the specified hosts.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy responsible for protecting or evaluating the specified hosts.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppSecWapSelectedHostnamesState build() {
            return $;
        }
    }

}

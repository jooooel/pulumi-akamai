// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPropertyRuleFormatsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ruleFormats;

    @CustomType.Constructor
    private GetPropertyRuleFormatsResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ruleFormats") List<String> ruleFormats) {
        this.id = id;
        this.ruleFormats = ruleFormats;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ruleFormats() {
        return this.ruleFormats;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRuleFormatsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private List<String> ruleFormats;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPropertyRuleFormatsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ruleFormats = defaults.ruleFormats;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ruleFormats(List<String> ruleFormats) {
            this.ruleFormats = Objects.requireNonNull(ruleFormats);
            return this;
        }
        public Builder ruleFormats(String... ruleFormats) {
            return ruleFormats(List.of(ruleFormats));
        }        public GetPropertyRuleFormatsResult build() {
            return new GetPropertyRuleFormatsResult(id, ruleFormats);
        }
    }
}

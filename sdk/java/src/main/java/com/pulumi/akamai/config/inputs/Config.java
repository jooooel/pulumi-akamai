// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.config.inputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Config {
    private final @Nullable String accessToken;
    private final @Nullable String accountKey;
    private final @Nullable String clientSecret;
    private final @Nullable String clientToken;
    private final @Nullable String host;
    private final @Nullable Integer maxBody;

    @CustomType.Constructor
    private Config(
        @CustomType.Parameter("accessToken") @Nullable String accessToken,
        @CustomType.Parameter("accountKey") @Nullable String accountKey,
        @CustomType.Parameter("clientSecret") @Nullable String clientSecret,
        @CustomType.Parameter("clientToken") @Nullable String clientToken,
        @CustomType.Parameter("host") @Nullable String host,
        @CustomType.Parameter("maxBody") @Nullable Integer maxBody) {
        this.accessToken = accessToken;
        this.accountKey = accountKey;
        this.clientSecret = clientSecret;
        this.clientToken = clientToken;
        this.host = host;
        this.maxBody = maxBody;
    }

    public Optional<String> accessToken() {
        return Optional.ofNullable(this.accessToken);
    }
    public Optional<String> accountKey() {
        return Optional.ofNullable(this.accountKey);
    }
    public Optional<String> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }
    public Optional<String> clientToken() {
        return Optional.ofNullable(this.clientToken);
    }
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    public Optional<Integer> maxBody() {
        return Optional.ofNullable(this.maxBody);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Config defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessToken;
        private @Nullable String accountKey;
        private @Nullable String clientSecret;
        private @Nullable String clientToken;
        private @Nullable String host;
        private @Nullable Integer maxBody;

        public Builder() {
    	      // Empty
        }

        public Builder(Config defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessToken = defaults.accessToken;
    	      this.accountKey = defaults.accountKey;
    	      this.clientSecret = defaults.clientSecret;
    	      this.clientToken = defaults.clientToken;
    	      this.host = defaults.host;
    	      this.maxBody = defaults.maxBody;
        }

        public Builder accessToken(@Nullable String accessToken) {
            this.accessToken = accessToken;
            return this;
        }
        public Builder accountKey(@Nullable String accountKey) {
            this.accountKey = accountKey;
            return this;
        }
        public Builder clientSecret(@Nullable String clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }
        public Builder clientToken(@Nullable String clientToken) {
            this.clientToken = clientToken;
            return this;
        }
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        public Builder maxBody(@Nullable Integer maxBody) {
            this.maxBody = maxBody;
            return this;
        }        public Config build() {
            return new Config(accessToken, accountKey, clientSecret, clientToken, host, maxBody);
        }
    }
}

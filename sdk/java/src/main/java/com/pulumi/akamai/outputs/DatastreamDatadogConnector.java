// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatastreamDatadogConnector {
    /**
     * @return - (Required) **Secret**. The API key associated with your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys).
     * * `compress logs` - (Optional) Enables GZIP compression for a log file sent to a destination. If unspecified, this defaults to `false`.
     * 
     */
    private final String authToken;
    /**
     * @return Enables GZIP compression for a log file sent to a destination. If unspecified, this defaults to `true`.
     * 
     */
    private final @Nullable Boolean compressLogs;
    private final @Nullable Integer connectorId;
    /**
     * @return The name of the connector.
     * 
     */
    private final String connectorName;
    /**
     * @return The service of the Datadog connector. A service groups together endpoints, queries, or jobs for the purposes of scaling instances. See [View Datadog reserved attribute list](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).
     * 
     */
    private final @Nullable String service;
    /**
     * @return The source of the Datadog connector. See [View Datadog reserved attribute list](https://docs.datadoghq.com/logs/log_collection/?tab=http#reserved-attributes).
     * 
     */
    private final @Nullable String source;
    /**
     * @return The tags of the Datadog connector. See [View Datadog tags](https://docs.datadoghq.com/getting_started/tagging/).
     * 
     */
    private final @Nullable String tags;
    /**
     * @return Enter the secure URL where you want to send and store your logs.
     * 
     */
    private final String url;

    @CustomType.Constructor
    private DatastreamDatadogConnector(
        @CustomType.Parameter("authToken") String authToken,
        @CustomType.Parameter("compressLogs") @Nullable Boolean compressLogs,
        @CustomType.Parameter("connectorId") @Nullable Integer connectorId,
        @CustomType.Parameter("connectorName") String connectorName,
        @CustomType.Parameter("service") @Nullable String service,
        @CustomType.Parameter("source") @Nullable String source,
        @CustomType.Parameter("tags") @Nullable String tags,
        @CustomType.Parameter("url") String url) {
        this.authToken = authToken;
        this.compressLogs = compressLogs;
        this.connectorId = connectorId;
        this.connectorName = connectorName;
        this.service = service;
        this.source = source;
        this.tags = tags;
        this.url = url;
    }

    /**
     * @return - (Required) **Secret**. The API key associated with your Datadog account. See [View API keys in Datadog](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys).
     * * `compress logs` - (Optional) Enables GZIP compression for a log file sent to a destination. If unspecified, this defaults to `false`.
     * 
     */
    public String authToken() {
        return this.authToken;
    }
    /**
     * @return Enables GZIP compression for a log file sent to a destination. If unspecified, this defaults to `true`.
     * 
     */
    public Optional<Boolean> compressLogs() {
        return Optional.ofNullable(this.compressLogs);
    }
    public Optional<Integer> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }
    /**
     * @return The name of the connector.
     * 
     */
    public String connectorName() {
        return this.connectorName;
    }
    /**
     * @return The service of the Datadog connector. A service groups together endpoints, queries, or jobs for the purposes of scaling instances. See [View Datadog reserved attribute list](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).
     * 
     */
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }
    /**
     * @return The source of the Datadog connector. See [View Datadog reserved attribute list](https://docs.datadoghq.com/logs/log_collection/?tab=http#reserved-attributes).
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return The tags of the Datadog connector. See [View Datadog tags](https://docs.datadoghq.com/getting_started/tagging/).
     * 
     */
    public Optional<String> tags() {
        return Optional.ofNullable(this.tags);
    }
    /**
     * @return Enter the secure URL where you want to send and store your logs.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastreamDatadogConnector defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authToken;
        private @Nullable Boolean compressLogs;
        private @Nullable Integer connectorId;
        private String connectorName;
        private @Nullable String service;
        private @Nullable String source;
        private @Nullable String tags;
        private String url;

        public Builder() {
    	      // Empty
        }

        public Builder(DatastreamDatadogConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authToken = defaults.authToken;
    	      this.compressLogs = defaults.compressLogs;
    	      this.connectorId = defaults.connectorId;
    	      this.connectorName = defaults.connectorName;
    	      this.service = defaults.service;
    	      this.source = defaults.source;
    	      this.tags = defaults.tags;
    	      this.url = defaults.url;
        }

        public Builder authToken(String authToken) {
            this.authToken = Objects.requireNonNull(authToken);
            return this;
        }
        public Builder compressLogs(@Nullable Boolean compressLogs) {
            this.compressLogs = compressLogs;
            return this;
        }
        public Builder connectorId(@Nullable Integer connectorId) {
            this.connectorId = connectorId;
            return this;
        }
        public Builder connectorName(String connectorName) {
            this.connectorName = Objects.requireNonNull(connectorName);
            return this;
        }
        public Builder service(@Nullable String service) {
            this.service = service;
            return this;
        }
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        public Builder tags(@Nullable String tags) {
            this.tags = tags;
            return this;
        }
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }        public DatastreamDatadogConnector build() {
            return new DatastreamDatadogConnector(authToken, compressLogs, connectorId, connectorName, service, source, tags, url);
        }
    }
}

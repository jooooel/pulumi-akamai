// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatastreamDatadogConnector {
    private String authToken;
    private @Nullable Boolean compressLogs;
    private @Nullable Integer connectorId;
    private String connectorName;
    private @Nullable String service;
    private @Nullable String source;
    private @Nullable String tags;
    private String url;

    private DatastreamDatadogConnector() {}
    public String authToken() {
        return this.authToken;
    }
    public Optional<Boolean> compressLogs() {
        return Optional.ofNullable(this.compressLogs);
    }
    public Optional<Integer> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }
    public String connectorName() {
        return this.connectorName;
    }
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    public Optional<String> tags() {
        return Optional.ofNullable(this.tags);
    }
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastreamDatadogConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authToken;
        private @Nullable Boolean compressLogs;
        private @Nullable Integer connectorId;
        private String connectorName;
        private @Nullable String service;
        private @Nullable String source;
        private @Nullable String tags;
        private String url;
        public Builder() {}
        public Builder(DatastreamDatadogConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authToken = defaults.authToken;
    	      this.compressLogs = defaults.compressLogs;
    	      this.connectorId = defaults.connectorId;
    	      this.connectorName = defaults.connectorName;
    	      this.service = defaults.service;
    	      this.source = defaults.source;
    	      this.tags = defaults.tags;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder authToken(String authToken) {
            this.authToken = Objects.requireNonNull(authToken);
            return this;
        }
        @CustomType.Setter
        public Builder compressLogs(@Nullable Boolean compressLogs) {
            this.compressLogs = compressLogs;
            return this;
        }
        @CustomType.Setter
        public Builder connectorId(@Nullable Integer connectorId) {
            this.connectorId = connectorId;
            return this;
        }
        @CustomType.Setter
        public Builder connectorName(String connectorName) {
            this.connectorName = Objects.requireNonNull(connectorName);
            return this;
        }
        @CustomType.Setter
        public Builder service(@Nullable String service) {
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable String tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public DatastreamDatadogConnector build() {
            final var o = new DatastreamDatadogConnector();
            o.authToken = authToken;
            o.compressLogs = compressLogs;
            o.connectorId = connectorId;
            o.connectorName = connectorName;
            o.service = service;
            o.source = source;
            o.tags = tags;
            o.url = url;
            return o;
        }
    }
}

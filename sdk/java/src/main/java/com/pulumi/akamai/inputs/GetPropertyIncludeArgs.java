// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPropertyIncludeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyIncludeArgs Empty = new GetPropertyIncludeArgs();

    @Import(name="contractId", required=true)
    private Output<String> contractId;

    public Output<String> contractId() {
        return this.contractId;
    }

    @Import(name="groupId", required=true)
    private Output<String> groupId;

    public Output<String> groupId() {
        return this.groupId;
    }

    @Import(name="includeId", required=true)
    private Output<String> includeId;

    public Output<String> includeId() {
        return this.includeId;
    }

    private GetPropertyIncludeArgs() {}

    private GetPropertyIncludeArgs(GetPropertyIncludeArgs $) {
        this.contractId = $.contractId;
        this.groupId = $.groupId;
        this.includeId = $.includeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyIncludeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyIncludeArgs $;

        public Builder() {
            $ = new GetPropertyIncludeArgs();
        }

        public Builder(GetPropertyIncludeArgs defaults) {
            $ = new GetPropertyIncludeArgs(Objects.requireNonNull(defaults));
        }

        public Builder contractId(Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder includeId(Output<String> includeId) {
            $.includeId = includeId;
            return this;
        }

        public Builder includeId(String includeId) {
            return includeId(Output.of(includeId));
        }

        public GetPropertyIncludeArgs build() {
            $.contractId = Objects.requireNonNull($.contractId, "expected parameter 'contractId' to be non-null");
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            $.includeId = Objects.requireNonNull($.includeId, "expected parameter 'includeId' to be non-null");
            return $;
        }
    }

}

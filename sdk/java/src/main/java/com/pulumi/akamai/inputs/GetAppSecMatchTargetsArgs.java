// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAppSecMatchTargetsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAppSecMatchTargetsArgs Empty = new GetAppSecMatchTargetsArgs();

    /**
     * . Unique identifier of the security configuration associated with the match targets.
     * 
     */
    @Import(name="configId", required=true)
    private Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the match targets.
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }

    /**
     * . Unique identifier of the match target you want to return information for. If not included, information is returned for all your match targets.
     * 
     */
    @Import(name="matchTargetId")
    private @Nullable Output<Integer> matchTargetId;

    /**
     * @return . Unique identifier of the match target you want to return information for. If not included, information is returned for all your match targets.
     * 
     */
    public Optional<Output<Integer>> matchTargetId() {
        return Optional.ofNullable(this.matchTargetId);
    }

    private GetAppSecMatchTargetsArgs() {}

    private GetAppSecMatchTargetsArgs(GetAppSecMatchTargetsArgs $) {
        this.configId = $.configId;
        this.matchTargetId = $.matchTargetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppSecMatchTargetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppSecMatchTargetsArgs $;

        public Builder() {
            $ = new GetAppSecMatchTargetsArgs();
        }

        public Builder(GetAppSecMatchTargetsArgs defaults) {
            $ = new GetAppSecMatchTargetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the match targets.
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the match targets.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param matchTargetId . Unique identifier of the match target you want to return information for. If not included, information is returned for all your match targets.
         * 
         * @return builder
         * 
         */
        public Builder matchTargetId(@Nullable Output<Integer> matchTargetId) {
            $.matchTargetId = matchTargetId;
            return this;
        }

        /**
         * @param matchTargetId . Unique identifier of the match target you want to return information for. If not included, information is returned for all your match targets.
         * 
         * @return builder
         * 
         */
        public Builder matchTargetId(Integer matchTargetId) {
            return matchTargetId(Output.of(matchTargetId));
        }

        public GetAppSecMatchTargetsArgs build() {
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            return $;
        }
    }

}

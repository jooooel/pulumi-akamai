// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecEvalState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecEvalState Empty = new AppSecEvalState();

    /**
     * . Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    @Import(name="currentRuleset")
    private @Nullable Output<String> currentRuleset;

    public Optional<Output<String>> currentRuleset() {
        return Optional.ofNullable(this.currentRuleset);
    }

    /**
     * . Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.
     * 
     */
    @Import(name="evalMode")
    private @Nullable Output<String> evalMode;

    /**
     * @return . Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.
     * 
     */
    public Optional<Output<String>> evalMode() {
        return Optional.ofNullable(this.evalMode);
    }

    /**
     * . Evaluation mode operation. Allowed values are:
     * - **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.
     * - **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.
     * - **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.
     * - **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.
     * - **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.
     * 
     */
    @Import(name="evalOperation")
    private @Nullable Output<String> evalOperation;

    /**
     * @return . Evaluation mode operation. Allowed values are:
     * - **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.
     * - **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.
     * - **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.
     * - **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.
     * - **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.
     * 
     */
    public Optional<Output<String>> evalOperation() {
        return Optional.ofNullable(this.evalOperation);
    }

    @Import(name="evalStatus")
    private @Nullable Output<String> evalStatus;

    public Optional<Output<String>> evalStatus() {
        return Optional.ofNullable(this.evalStatus);
    }

    @Import(name="evaluatingRuleset")
    private @Nullable Output<String> evaluatingRuleset;

    public Optional<Output<String>> evaluatingRuleset() {
        return Optional.ofNullable(this.evaluatingRuleset);
    }

    @Import(name="expirationDate")
    private @Nullable Output<String> expirationDate;

    public Optional<Output<String>> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }

    /**
     * . Unique identifier of the security policy associated with the evaluation process.
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the evaluation process.
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    private AppSecEvalState() {}

    private AppSecEvalState(AppSecEvalState $) {
        this.configId = $.configId;
        this.currentRuleset = $.currentRuleset;
        this.evalMode = $.evalMode;
        this.evalOperation = $.evalOperation;
        this.evalStatus = $.evalStatus;
        this.evaluatingRuleset = $.evaluatingRuleset;
        this.expirationDate = $.expirationDate;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecEvalState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecEvalState $;

        public Builder() {
            $ = new AppSecEvalState();
        }

        public Builder(AppSecEvalState defaults) {
            $ = new AppSecEvalState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        public Builder currentRuleset(@Nullable Output<String> currentRuleset) {
            $.currentRuleset = currentRuleset;
            return this;
        }

        public Builder currentRuleset(String currentRuleset) {
            return currentRuleset(Output.of(currentRuleset));
        }

        /**
         * @param evalMode . Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.
         * 
         * @return builder
         * 
         */
        public Builder evalMode(@Nullable Output<String> evalMode) {
            $.evalMode = evalMode;
            return this;
        }

        /**
         * @param evalMode . Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.
         * 
         * @return builder
         * 
         */
        public Builder evalMode(String evalMode) {
            return evalMode(Output.of(evalMode));
        }

        /**
         * @param evalOperation . Evaluation mode operation. Allowed values are:
         * - **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.
         * - **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.
         * - **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.
         * - **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.
         * - **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.
         * 
         * @return builder
         * 
         */
        public Builder evalOperation(@Nullable Output<String> evalOperation) {
            $.evalOperation = evalOperation;
            return this;
        }

        /**
         * @param evalOperation . Evaluation mode operation. Allowed values are:
         * - **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.
         * - **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.
         * - **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.
         * - **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.
         * - **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.
         * 
         * @return builder
         * 
         */
        public Builder evalOperation(String evalOperation) {
            return evalOperation(Output.of(evalOperation));
        }

        public Builder evalStatus(@Nullable Output<String> evalStatus) {
            $.evalStatus = evalStatus;
            return this;
        }

        public Builder evalStatus(String evalStatus) {
            return evalStatus(Output.of(evalStatus));
        }

        public Builder evaluatingRuleset(@Nullable Output<String> evaluatingRuleset) {
            $.evaluatingRuleset = evaluatingRuleset;
            return this;
        }

        public Builder evaluatingRuleset(String evaluatingRuleset) {
            return evaluatingRuleset(Output.of(evaluatingRuleset));
        }

        public Builder expirationDate(@Nullable Output<String> expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        public Builder expirationDate(String expirationDate) {
            return expirationDate(Output.of(expirationDate));
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the evaluation process.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the evaluation process.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppSecEvalState build() {
            return $;
        }
    }

}

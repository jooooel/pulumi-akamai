// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EdgeHostNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdgeHostNameArgs Empty = new EdgeHostNameArgs();

    /**
     * Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<Integer> certificate;

    /**
     * @return Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
     * 
     */
    public Optional<Output<Integer>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * Replaced by `contract_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;contract&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contract"" has been deprecated. */
    @Import(name="contract")
    private @Nullable Output<String> contract;

    /**
     * @return Replaced by `contract_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;contract&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contract"" has been deprecated. */
    public Optional<Output<String>> contract() {
        return Optional.ofNullable(this.contract);
    }

    /**
     * A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    @Import(name="contractId")
    private @Nullable Output<String> contractId;

    /**
     * @return A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    public Optional<Output<String>> contractId() {
        return Optional.ofNullable(this.contractId);
    }

    /**
     * One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
     * 
     */
    @Import(name="edgeHostname", required=true)
    private Output<String> edgeHostname;

    /**
     * @return One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
     * 
     */
    public Output<String> edgeHostname() {
        return this.edgeHostname;
    }

    /**
     * Replaced by `group_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;group&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""group"" has been deprecated. */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return Replaced by `group_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;group&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""group"" has been deprecated. */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * A group&#39;s unique ID, including the `grp_` prefix.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return A group&#39;s unique ID, including the `grp_` prefix.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
     * 
     */
    @Import(name="ipBehavior", required=true)
    private Output<String> ipBehavior;

    /**
     * @return Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
     * 
     */
    public Output<String> ipBehavior() {
        return this.ipBehavior;
    }

    /**
     * Replaced by `product_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;product&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""product"" has been deprecated. */
    @Import(name="product")
    private @Nullable Output<String> product;

    /**
     * @return Replaced by `product_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;product&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""product"" has been deprecated. */
    public Optional<Output<String>> product() {
        return Optional.ofNullable(this.product);
    }

    @Import(name="productId")
    private @Nullable Output<String> productId;

    public Optional<Output<String>> productId() {
        return Optional.ofNullable(this.productId);
    }

    /**
     * Email address that should receive updates on the IP behavior update request. Required for update operation.
     * 
     */
    @Import(name="statusUpdateEmails")
    private @Nullable Output<List<String>> statusUpdateEmails;

    /**
     * @return Email address that should receive updates on the IP behavior update request. Required for update operation.
     * 
     */
    public Optional<Output<List<String>>> statusUpdateEmails() {
        return Optional.ofNullable(this.statusUpdateEmails);
    }

    /**
     * A JSON encoded list of use cases.
     * 
     */
    @Import(name="useCases")
    private @Nullable Output<String> useCases;

    /**
     * @return A JSON encoded list of use cases.
     * 
     */
    public Optional<Output<String>> useCases() {
        return Optional.ofNullable(this.useCases);
    }

    private EdgeHostNameArgs() {}

    private EdgeHostNameArgs(EdgeHostNameArgs $) {
        this.certificate = $.certificate;
        this.contract = $.contract;
        this.contractId = $.contractId;
        this.edgeHostname = $.edgeHostname;
        this.group = $.group;
        this.groupId = $.groupId;
        this.ipBehavior = $.ipBehavior;
        this.product = $.product;
        this.productId = $.productId;
        this.statusUpdateEmails = $.statusUpdateEmails;
        this.useCases = $.useCases;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdgeHostNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdgeHostNameArgs $;

        public Builder() {
            $ = new EdgeHostNameArgs();
        }

        public Builder(EdgeHostNameArgs defaults) {
            $ = new EdgeHostNameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<Integer> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
         * 
         * @return builder
         * 
         */
        public Builder certificate(Integer certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param contract Replaced by `contract_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contract&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contract"" has been deprecated. */
        public Builder contract(@Nullable Output<String> contract) {
            $.contract = contract;
            return this;
        }

        /**
         * @param contract Replaced by `contract_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contract&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contract"" has been deprecated. */
        public Builder contract(String contract) {
            return contract(Output.of(contract));
        }

        /**
         * @param contractId A contract&#39;s unique ID, including the `ctr_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder contractId(@Nullable Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param contractId A contract&#39;s unique ID, including the `ctr_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        /**
         * @param edgeHostname One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
         * 
         * @return builder
         * 
         */
        public Builder edgeHostname(Output<String> edgeHostname) {
            $.edgeHostname = edgeHostname;
            return this;
        }

        /**
         * @param edgeHostname One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
         * 
         * @return builder
         * 
         */
        public Builder edgeHostname(String edgeHostname) {
            return edgeHostname(Output.of(edgeHostname));
        }

        /**
         * @param group Replaced by `group_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;group&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""group"" has been deprecated. */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group Replaced by `group_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;group&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""group"" has been deprecated. */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param groupId A group&#39;s unique ID, including the `grp_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId A group&#39;s unique ID, including the `grp_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param ipBehavior Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
         * 
         * @return builder
         * 
         */
        public Builder ipBehavior(Output<String> ipBehavior) {
            $.ipBehavior = ipBehavior;
            return this;
        }

        /**
         * @param ipBehavior Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
         * 
         * @return builder
         * 
         */
        public Builder ipBehavior(String ipBehavior) {
            return ipBehavior(Output.of(ipBehavior));
        }

        /**
         * @param product Replaced by `product_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;product&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""product"" has been deprecated. */
        public Builder product(@Nullable Output<String> product) {
            $.product = product;
            return this;
        }

        /**
         * @param product Replaced by `product_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;product&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""product"" has been deprecated. */
        public Builder product(String product) {
            return product(Output.of(product));
        }

        public Builder productId(@Nullable Output<String> productId) {
            $.productId = productId;
            return this;
        }

        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        /**
         * @param statusUpdateEmails Email address that should receive updates on the IP behavior update request. Required for update operation.
         * 
         * @return builder
         * 
         */
        public Builder statusUpdateEmails(@Nullable Output<List<String>> statusUpdateEmails) {
            $.statusUpdateEmails = statusUpdateEmails;
            return this;
        }

        /**
         * @param statusUpdateEmails Email address that should receive updates on the IP behavior update request. Required for update operation.
         * 
         * @return builder
         * 
         */
        public Builder statusUpdateEmails(List<String> statusUpdateEmails) {
            return statusUpdateEmails(Output.of(statusUpdateEmails));
        }

        /**
         * @param statusUpdateEmails Email address that should receive updates on the IP behavior update request. Required for update operation.
         * 
         * @return builder
         * 
         */
        public Builder statusUpdateEmails(String... statusUpdateEmails) {
            return statusUpdateEmails(List.of(statusUpdateEmails));
        }

        /**
         * @param useCases A JSON encoded list of use cases.
         * 
         * @return builder
         * 
         */
        public Builder useCases(@Nullable Output<String> useCases) {
            $.useCases = useCases;
            return this;
        }

        /**
         * @param useCases A JSON encoded list of use cases.
         * 
         * @return builder
         * 
         */
        public Builder useCases(String useCases) {
            return useCases(Output.of(useCases));
        }

        public EdgeHostNameArgs build() {
            $.edgeHostname = Objects.requireNonNull($.edgeHostname, "expected parameter 'edgeHostname' to be non-null");
            $.ipBehavior = Objects.requireNonNull($.ipBehavior, "expected parameter 'ipBehavior' to be non-null");
            return $;
        }
    }

}

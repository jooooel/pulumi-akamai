// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIamStatesResult {
    private final String country;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> states;

    @CustomType.Constructor
    private GetIamStatesResult(
        @CustomType.Parameter("country") String country,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("states") List<String> states) {
        this.country = country;
        this.id = id;
        this.states = states;
    }

    public String country() {
        return this.country;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> states() {
        return this.states;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamStatesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String country;
        private String id;
        private List<String> states;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIamStatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.country = defaults.country;
    	      this.id = defaults.id;
    	      this.states = defaults.states;
        }

        public Builder country(String country) {
            this.country = Objects.requireNonNull(country);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder states(List<String> states) {
            this.states = Objects.requireNonNull(states);
            return this;
        }
        public Builder states(String... states) {
            return states(List.of(states));
        }        public GetIamStatesResult build() {
            return new GetIamStatesResult(country, id, states);
        }
    }
}

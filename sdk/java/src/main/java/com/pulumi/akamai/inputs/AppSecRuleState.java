// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecRuleState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecRuleState Empty = new AppSecRuleState();

    /**
     * . Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.
     * 
     */
    @Import(name="conditionException")
    private @Nullable Output<String> conditionException;

    /**
     * @return . Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.
     * 
     */
    public Optional<Output<String>> conditionException() {
        return Optional.ofNullable(this.conditionException);
    }

    /**
     * . Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Allowed values are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action. or `none` to take no action.
     * 
     */
    @Import(name="ruleAction")
    private @Nullable Output<String> ruleAction;

    /**
     * @return Allowed values are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action. or `none` to take no action.
     * 
     */
    public Optional<Output<String>> ruleAction() {
        return Optional.ofNullable(this.ruleAction);
    }

    /**
     * . Unique identifier of the rule being modified.
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<Integer> ruleId;

    /**
     * @return . Unique identifier of the rule being modified.
     * 
     */
    public Optional<Output<Integer>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * . Unique identifier of the security policy associated with the Kona Rule Set rule being modified.
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the Kona Rule Set rule being modified.
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    private AppSecRuleState() {}

    private AppSecRuleState(AppSecRuleState $) {
        this.conditionException = $.conditionException;
        this.configId = $.configId;
        this.ruleAction = $.ruleAction;
        this.ruleId = $.ruleId;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecRuleState $;

        public Builder() {
            $ = new AppSecRuleState();
        }

        public Builder(AppSecRuleState defaults) {
            $ = new AppSecRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditionException . Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.
         * 
         * @return builder
         * 
         */
        public Builder conditionException(@Nullable Output<String> conditionException) {
            $.conditionException = conditionException;
            return this;
        }

        /**
         * @param conditionException . Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.
         * 
         * @return builder
         * 
         */
        public Builder conditionException(String conditionException) {
            return conditionException(Output.of(conditionException));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param ruleAction Allowed values are:
         * - **alert**. Record the event.
         * - **deny**. Block the request.
         * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
         * - **none**. Take no action. or `none` to take no action.
         * 
         * @return builder
         * 
         */
        public Builder ruleAction(@Nullable Output<String> ruleAction) {
            $.ruleAction = ruleAction;
            return this;
        }

        /**
         * @param ruleAction Allowed values are:
         * - **alert**. Record the event.
         * - **deny**. Block the request.
         * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
         * - **none**. Take no action. or `none` to take no action.
         * 
         * @return builder
         * 
         */
        public Builder ruleAction(String ruleAction) {
            return ruleAction(Output.of(ruleAction));
        }

        /**
         * @param ruleId . Unique identifier of the rule being modified.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(@Nullable Output<Integer> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId . Unique identifier of the rule being modified.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(Integer ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the Kona Rule Set rule being modified.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the Kona Rule Set rule being modified.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppSecRuleState build() {
            return $;
        }
    }

}

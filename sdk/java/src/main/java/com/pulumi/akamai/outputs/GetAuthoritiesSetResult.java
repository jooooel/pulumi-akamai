// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuthoritiesSetResult {
    private final List<String> authorities;
    private final String contract;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetAuthoritiesSetResult(
        @CustomType.Parameter("authorities") List<String> authorities,
        @CustomType.Parameter("contract") String contract,
        @CustomType.Parameter("id") String id) {
        this.authorities = authorities;
        this.contract = contract;
        this.id = id;
    }

    public List<String> authorities() {
        return this.authorities;
    }
    public String contract() {
        return this.contract;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthoritiesSetResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> authorities;
        private String contract;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAuthoritiesSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorities = defaults.authorities;
    	      this.contract = defaults.contract;
    	      this.id = defaults.id;
        }

        public Builder authorities(List<String> authorities) {
            this.authorities = Objects.requireNonNull(authorities);
            return this;
        }
        public Builder authorities(String... authorities) {
            return authorities(List.of(authorities));
        }
        public Builder contract(String contract) {
            this.contract = Objects.requireNonNull(contract);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetAuthoritiesSetResult build() {
            return new GetAuthoritiesSetResult(authorities, contract, id);
        }
    }
}

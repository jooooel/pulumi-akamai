// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.IamRoleArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.IamRoleState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Use the `akamai.IamRole` resource to list and create roles for users. Roles are lists of permissions that are explicitly tied to both a user and a group. Users need roles to act on objects in a group.
 * 
 * ## Basic usage
 * 
 * This example returns information on available roles:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.akamai.IamRole;
 * import com.pulumi.akamai.IamRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new IamRole(&#34;example&#34;, IamRoleArgs.builder()        
 *             .description(&#34;This role will allow you to view&#34;)
 *             .grantedRoles(2051)
 *             .type(&#34;custom&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Attributes reference
 * 
 * This resource returns this attribute:
 * 
 * * `type` - The type indicates whether the role is `standard`, provided by Akamai, or `custom` for the account.
 * 
 */
@ResourceType(type="akamai:index/iamRole:IamRole")
public class IamRole extends com.pulumi.resources.CustomResource {
    /**
     * The description for a role.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return The description for a role.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The list of existing unique identifiers for the granted roles. Each identifier must be a unique integer.
     * 
     */
    @Export(name="grantedRoles", type=List.class, parameters={Integer.class})
    private Output<List<Integer>> grantedRoles;

    /**
     * @return The list of existing unique identifiers for the granted roles. Each identifier must be a unique integer.
     * 
     */
    public Output<List<Integer>> grantedRoles() {
        return this.grantedRoles;
    }
    /**
     * The name you supply for a role.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name you supply for a role.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The role type which indicates whether it&#39;s a standard role provided by Akamai or a custom role for the account
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The role type which indicates whether it&#39;s a standard role provided by Akamai or a custom role for the account
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IamRole(String name) {
        this(name, IamRoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IamRole(String name, IamRoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IamRole(String name, IamRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/iamRole:IamRole", name, args == null ? IamRoleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IamRole(String name, Output<String> id, @Nullable IamRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/iamRole:IamRole", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IamRole get(String name, Output<String> id, @Nullable IamRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IamRole(name, id, state, options);
    }
}

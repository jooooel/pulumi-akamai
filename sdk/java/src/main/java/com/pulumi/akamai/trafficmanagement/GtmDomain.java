// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.trafficmanagement;

import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.trafficmanagement.GtmDomainArgs;
import com.pulumi.akamai.trafficmanagement.inputs.GtmDomainState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use the `akamai.GtmDomain` resource to create, configure, and import a GTM Domain, which is a basic building block of a traffic management configuration.
 * 
 * &gt; **Note** Import requires an ID with this format: `existing_domain_name`.
 * 
 * ## Example Usage
 * 
 * Basic usage:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.akamai.GtmDomain;
 * import com.pulumi.akamai.GtmDomainArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var demodomain = new GtmDomain(&#34;demodomain&#34;, GtmDomainArgs.builder()        
 *             .comment(&#34;some comment&#34;)
 *             .contract(&#34;XXX&#34;)
 *             .group(100)
 *             .type(&#34;basic&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Schema reference
 * 
 * You can download the GTM Domain backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#domain) page.
 * 
 * @deprecated
 * akamai.trafficmanagement.GtmDomain has been deprecated in favor of akamai.GtmDomain
 * 
 */
@Deprecated /* akamai.trafficmanagement.GtmDomain has been deprecated in favor of akamai.GtmDomain */
@ResourceType(type="akamai:trafficmanagement/gtmDomain:GtmDomain")
public class GtmDomain extends com.pulumi.resources.CustomResource {
    /**
     * A boolean that if set to `true`, GTM collapses CNAME redirections in DNS answers when it knows the target of the CNAME.
     * 
     */
    @Export(name="cnameCoalescingEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> cnameCoalescingEnabled;

    /**
     * @return A boolean that if set to `true`, GTM collapses CNAME redirections in DNS answers when it knows the target of the CNAME.
     * 
     */
    public Output<Optional<Boolean>> cnameCoalescingEnabled() {
        return Codegen.optional(this.cnameCoalescingEnabled);
    }
    /**
     * A descriptive note about changes to the domain. The maximum is 4000 characters.
     * 
     */
    @Export(name="comment", type=String.class, parameters={})
    private Output</* @Nullable */ String> comment;

    /**
     * @return A descriptive note about changes to the domain. The maximum is 4000 characters.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * If creating a domain, the contract ID.
     * 
     */
    @Export(name="contract", type=String.class, parameters={})
    private Output</* @Nullable */ String> contract;

    /**
     * @return If creating a domain, the contract ID.
     * 
     */
    public Output<Optional<String>> contract() {
        return Codegen.optional(this.contract);
    }
    /**
     * Specifies the download penalty score. The default is `75`. If the download encounters an error, the web agent computes a score that is either the download time in seconds or a penalty score.
     * 
     */
    @Export(name="defaultErrorPenalty", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> defaultErrorPenalty;

    /**
     * @return Specifies the download penalty score. The default is `75`. If the download encounters an error, the web agent computes a score that is either the download time in seconds or a penalty score.
     * 
     */
    public Output<Optional<Integer>> defaultErrorPenalty() {
        return Codegen.optional(this.defaultErrorPenalty);
    }
    @Export(name="defaultHealthMax", type=Double.class, parameters={})
    private Output<Double> defaultHealthMax;

    public Output<Double> defaultHealthMax() {
        return this.defaultHealthMax;
    }
    @Export(name="defaultHealthMultiplier", type=Double.class, parameters={})
    private Output<Double> defaultHealthMultiplier;

    public Output<Double> defaultHealthMultiplier() {
        return this.defaultHealthMultiplier;
    }
    @Export(name="defaultHealthThreshold", type=Double.class, parameters={})
    private Output<Double> defaultHealthThreshold;

    public Output<Double> defaultHealthThreshold() {
        return this.defaultHealthThreshold;
    }
    @Export(name="defaultMaxUnreachablePenalty", type=Integer.class, parameters={})
    private Output<Integer> defaultMaxUnreachablePenalty;

    public Output<Integer> defaultMaxUnreachablePenalty() {
        return this.defaultMaxUnreachablePenalty;
    }
    /**
     * Specifies an optional Base64-encoded certificate that corresponds with the private key for TLS-based liveness tests (HTTPS, SMTPS, POPS, and TCPS).
     * 
     */
    @Export(name="defaultSslClientCertificate", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultSslClientCertificate;

    /**
     * @return Specifies an optional Base64-encoded certificate that corresponds with the private key for TLS-based liveness tests (HTTPS, SMTPS, POPS, and TCPS).
     * 
     */
    public Output<Optional<String>> defaultSslClientCertificate() {
        return Codegen.optional(this.defaultSslClientCertificate);
    }
    /**
     * Specifies a Base64-encoded private key that corresponds with the TLS certificate for HTTPS, SMTPS, POPS, and TCPS liveness tests.
     * 
     */
    @Export(name="defaultSslClientPrivateKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultSslClientPrivateKey;

    /**
     * @return Specifies a Base64-encoded private key that corresponds with the TLS certificate for HTTPS, SMTPS, POPS, and TCPS liveness tests.
     * 
     */
    public Output<Optional<String>> defaultSslClientPrivateKey() {
        return Codegen.optional(this.defaultSslClientPrivateKey);
    }
    /**
     * Specifies the timeout penalty score. Default is `25`.
     * 
     */
    @Export(name="defaultTimeoutPenalty", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> defaultTimeoutPenalty;

    /**
     * @return Specifies the timeout penalty score. Default is `25`.
     * 
     */
    public Output<Optional<Integer>> defaultTimeoutPenalty() {
        return Codegen.optional(this.defaultTimeoutPenalty);
    }
    @Export(name="defaultUnreachableThreshold", type=Double.class, parameters={})
    private Output<Double> defaultUnreachableThreshold;

    public Output<Double> defaultUnreachableThreshold() {
        return this.defaultUnreachableThreshold;
    }
    /**
     * A list of email addresses to notify when a change is made to the domain.
     * 
     */
    @Export(name="emailNotificationLists", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> emailNotificationLists;

    /**
     * @return A list of email addresses to notify when a change is made to the domain.
     * 
     */
    public Output<Optional<List<String>>> emailNotificationLists() {
        return Codegen.optional(this.emailNotificationLists);
    }
    /**
     * A boolean indicating whether whether the GTM Domain is using end user client subnet mapping.
     * 
     */
    @Export(name="endUserMappingEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> endUserMappingEnabled;

    /**
     * @return A boolean indicating whether whether the GTM Domain is using end user client subnet mapping.
     * 
     */
    public Output<Optional<Boolean>> endUserMappingEnabled() {
        return Codegen.optional(this.endUserMappingEnabled);
    }
    /**
     * If creating a domain, the currently selected group ID.
     * 
     */
    @Export(name="group", type=String.class, parameters={})
    private Output</* @Nullable */ String> group;

    /**
     * @return If creating a domain, the currently selected group ID.
     * 
     */
    public Output<Optional<String>> group() {
        return Codegen.optional(this.group);
    }
    /**
     * A boolean indicating whether one or more measurements of load (resources) are defined by you and supplied by each data center in real time to balance load.
     * 
     */
    @Export(name="loadFeedback", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> loadFeedback;

    /**
     * @return A boolean indicating whether one or more measurements of load (resources) are defined by you and supplied by each data center in real time to balance load.
     * 
     */
    public Output<Optional<Boolean>> loadFeedback() {
        return Codegen.optional(this.loadFeedback);
    }
    /**
     * Indicates the percentage of load imbalance factor (LIF) for the domain.
     * 
     */
    @Export(name="loadImbalancePercentage", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> loadImbalancePercentage;

    /**
     * @return Indicates the percentage of load imbalance factor (LIF) for the domain.
     * 
     */
    public Output<Optional<Double>> loadImbalancePercentage() {
        return Codegen.optional(this.loadImbalancePercentage);
    }
    @Export(name="mapUpdateInterval", type=Integer.class, parameters={})
    private Output<Integer> mapUpdateInterval;

    public Output<Integer> mapUpdateInterval() {
        return this.mapUpdateInterval;
    }
    @Export(name="maxProperties", type=Integer.class, parameters={})
    private Output<Integer> maxProperties;

    public Output<Integer> maxProperties() {
        return this.maxProperties;
    }
    @Export(name="maxResources", type=Integer.class, parameters={})
    private Output<Integer> maxResources;

    public Output<Integer> maxResources() {
        return this.maxResources;
    }
    @Export(name="maxTestTimeout", type=Double.class, parameters={})
    private Output<Double> maxTestTimeout;

    public Output<Double> maxTestTimeout() {
        return this.maxTestTimeout;
    }
    @Export(name="maxTtl", type=Integer.class, parameters={})
    private Output<Integer> maxTtl;

    public Output<Integer> maxTtl() {
        return this.maxTtl;
    }
    @Export(name="minPingableRegionFraction", type=Double.class, parameters={})
    private Output<Double> minPingableRegionFraction;

    public Output<Double> minPingableRegionFraction() {
        return this.minPingableRegionFraction;
    }
    @Export(name="minTestInterval", type=Integer.class, parameters={})
    private Output<Integer> minTestInterval;

    public Output<Integer> minTestInterval() {
        return this.minTestInterval;
    }
    @Export(name="minTtl", type=Integer.class, parameters={})
    private Output<Integer> minTtl;

    public Output<Integer> minTtl() {
        return this.minTtl;
    }
    /**
     * The DNS name for a collection of GTM Properties.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The DNS name for a collection of GTM Properties.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="pingInterval", type=Integer.class, parameters={})
    private Output<Integer> pingInterval;

    public Output<Integer> pingInterval() {
        return this.pingInterval;
    }
    @Export(name="pingPacketSize", type=Integer.class, parameters={})
    private Output<Integer> pingPacketSize;

    public Output<Integer> pingPacketSize() {
        return this.pingPacketSize;
    }
    @Export(name="roundRobinPrefix", type=String.class, parameters={})
    private Output<String> roundRobinPrefix;

    public Output<String> roundRobinPrefix() {
        return this.roundRobinPrefix;
    }
    @Export(name="servermonitorLivenessCount", type=Integer.class, parameters={})
    private Output<Integer> servermonitorLivenessCount;

    public Output<Integer> servermonitorLivenessCount() {
        return this.servermonitorLivenessCount;
    }
    @Export(name="servermonitorLoadCount", type=Integer.class, parameters={})
    private Output<Integer> servermonitorLoadCount;

    public Output<Integer> servermonitorLoadCount() {
        return this.servermonitorLoadCount;
    }
    @Export(name="servermonitorPool", type=String.class, parameters={})
    private Output<String> servermonitorPool;

    public Output<String> servermonitorPool() {
        return this.servermonitorPool;
    }
    /**
     * Th type of GTM domain. Options include `failover-only`, `static`, `weighted`, `basic`, or `full`.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Th type of GTM domain. Options include `failover-only`, `static`, `weighted`, `basic`, or `full`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * A boolean that, if set to `true`, waits for transaction to complete.
     * 
     */
    @Export(name="waitOnComplete", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitOnComplete;

    /**
     * @return A boolean that, if set to `true`, waits for transaction to complete.
     * 
     */
    public Output<Optional<Boolean>> waitOnComplete() {
        return Codegen.optional(this.waitOnComplete);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GtmDomain(String name) {
        this(name, GtmDomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GtmDomain(String name, GtmDomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GtmDomain(String name, GtmDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:trafficmanagement/gtmDomain:GtmDomain", name, args == null ? GtmDomainArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GtmDomain(String name, Output<String> id, @Nullable GtmDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:trafficmanagement/gtmDomain:GtmDomain", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GtmDomain get(String name, Output<String> id, @Nullable GtmDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GtmDomain(name, id, state, options);
    }
}

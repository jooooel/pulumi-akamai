// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudletsApplicationLoadBalancerDataCenter {
    private final String city;
    private final Boolean cloudServerHostHeaderOverride;
    private final Boolean cloudService;
    private final String continent;
    private final String country;
    private final String hostname;
    private final Double latitude;
    private final List<String> livenessHosts;
    private final Double longitude;
    /**
     * @return - (Required) A unique identifier for the Conditional Origin that supports the load balancing configuration. The Conditional Origin type must be set to `APPLICATION_LOAD_BALANCER` in the `origin` behavior. See property rules for more information.
     * 
     */
    private final String originId;
    private final Double percent;
    private final String stateOrProvince;

    @CustomType.Constructor
    private GetCloudletsApplicationLoadBalancerDataCenter(
        @CustomType.Parameter("city") String city,
        @CustomType.Parameter("cloudServerHostHeaderOverride") Boolean cloudServerHostHeaderOverride,
        @CustomType.Parameter("cloudService") Boolean cloudService,
        @CustomType.Parameter("continent") String continent,
        @CustomType.Parameter("country") String country,
        @CustomType.Parameter("hostname") String hostname,
        @CustomType.Parameter("latitude") Double latitude,
        @CustomType.Parameter("livenessHosts") List<String> livenessHosts,
        @CustomType.Parameter("longitude") Double longitude,
        @CustomType.Parameter("originId") String originId,
        @CustomType.Parameter("percent") Double percent,
        @CustomType.Parameter("stateOrProvince") String stateOrProvince) {
        this.city = city;
        this.cloudServerHostHeaderOverride = cloudServerHostHeaderOverride;
        this.cloudService = cloudService;
        this.continent = continent;
        this.country = country;
        this.hostname = hostname;
        this.latitude = latitude;
        this.livenessHosts = livenessHosts;
        this.longitude = longitude;
        this.originId = originId;
        this.percent = percent;
        this.stateOrProvince = stateOrProvince;
    }

    public String city() {
        return this.city;
    }
    public Boolean cloudServerHostHeaderOverride() {
        return this.cloudServerHostHeaderOverride;
    }
    public Boolean cloudService() {
        return this.cloudService;
    }
    public String continent() {
        return this.continent;
    }
    public String country() {
        return this.country;
    }
    public String hostname() {
        return this.hostname;
    }
    public Double latitude() {
        return this.latitude;
    }
    public List<String> livenessHosts() {
        return this.livenessHosts;
    }
    public Double longitude() {
        return this.longitude;
    }
    /**
     * @return - (Required) A unique identifier for the Conditional Origin that supports the load balancing configuration. The Conditional Origin type must be set to `APPLICATION_LOAD_BALANCER` in the `origin` behavior. See property rules for more information.
     * 
     */
    public String originId() {
        return this.originId;
    }
    public Double percent() {
        return this.percent;
    }
    public String stateOrProvince() {
        return this.stateOrProvince;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsApplicationLoadBalancerDataCenter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String city;
        private Boolean cloudServerHostHeaderOverride;
        private Boolean cloudService;
        private String continent;
        private String country;
        private String hostname;
        private Double latitude;
        private List<String> livenessHosts;
        private Double longitude;
        private String originId;
        private Double percent;
        private String stateOrProvince;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCloudletsApplicationLoadBalancerDataCenter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.cloudServerHostHeaderOverride = defaults.cloudServerHostHeaderOverride;
    	      this.cloudService = defaults.cloudService;
    	      this.continent = defaults.continent;
    	      this.country = defaults.country;
    	      this.hostname = defaults.hostname;
    	      this.latitude = defaults.latitude;
    	      this.livenessHosts = defaults.livenessHosts;
    	      this.longitude = defaults.longitude;
    	      this.originId = defaults.originId;
    	      this.percent = defaults.percent;
    	      this.stateOrProvince = defaults.stateOrProvince;
        }

        public Builder city(String city) {
            this.city = Objects.requireNonNull(city);
            return this;
        }
        public Builder cloudServerHostHeaderOverride(Boolean cloudServerHostHeaderOverride) {
            this.cloudServerHostHeaderOverride = Objects.requireNonNull(cloudServerHostHeaderOverride);
            return this;
        }
        public Builder cloudService(Boolean cloudService) {
            this.cloudService = Objects.requireNonNull(cloudService);
            return this;
        }
        public Builder continent(String continent) {
            this.continent = Objects.requireNonNull(continent);
            return this;
        }
        public Builder country(String country) {
            this.country = Objects.requireNonNull(country);
            return this;
        }
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        public Builder latitude(Double latitude) {
            this.latitude = Objects.requireNonNull(latitude);
            return this;
        }
        public Builder livenessHosts(List<String> livenessHosts) {
            this.livenessHosts = Objects.requireNonNull(livenessHosts);
            return this;
        }
        public Builder livenessHosts(String... livenessHosts) {
            return livenessHosts(List.of(livenessHosts));
        }
        public Builder longitude(Double longitude) {
            this.longitude = Objects.requireNonNull(longitude);
            return this;
        }
        public Builder originId(String originId) {
            this.originId = Objects.requireNonNull(originId);
            return this;
        }
        public Builder percent(Double percent) {
            this.percent = Objects.requireNonNull(percent);
            return this;
        }
        public Builder stateOrProvince(String stateOrProvince) {
            this.stateOrProvince = Objects.requireNonNull(stateOrProvince);
            return this;
        }        public GetCloudletsApplicationLoadBalancerDataCenter build() {
            return new GetCloudletsApplicationLoadBalancerDataCenter(city, cloudServerHostHeaderOverride, cloudService, continent, country, hostname, latitude, livenessHosts, longitude, originId, percent, stateOrProvince);
        }
    }
}

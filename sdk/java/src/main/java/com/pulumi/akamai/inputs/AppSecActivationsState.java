// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecActivationsState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecActivationsState Empty = new AppSecActivationsState();

    /**
     * Whether to activate or deactivate the specified security configuration and version
     * 
     * @deprecated
     * The setting activate has been deprecated; &#34;terraform apply&#34; will always perform activation. (Use &#34;terraform destroy&#34; for deactivation.)
     * 
     */
    @Deprecated /* The setting activate has been deprecated; ""terraform apply"" will always perform activation. (Use ""terraform destroy"" for deactivation.) */
    @Import(name="activate")
    private @Nullable Output<Boolean> activate;

    /**
     * @return Whether to activate or deactivate the specified security configuration and version
     * 
     * @deprecated
     * The setting activate has been deprecated; &#34;terraform apply&#34; will always perform activation. (Use &#34;terraform destroy&#34; for deactivation.)
     * 
     */
    @Deprecated /* The setting activate has been deprecated; ""terraform apply"" will always perform activation. (Use ""terraform destroy"" for deactivation.) */
    public Optional<Output<Boolean>> activate() {
        return Optional.ofNullable(this.activate);
    }

    /**
     * Unique identifier of the security configuration to be activated
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration to be activated
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Network on which to activate the configuration version (STAGING or PRODUCTION)
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return Network on which to activate the configuration version (STAGING or PRODUCTION)
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Note describing the activation. Will use timestamp if omitted.
     * 
     */
    @Import(name="note")
    private @Nullable Output<String> note;

    /**
     * @return Note describing the activation. Will use timestamp if omitted.
     * 
     */
    public Optional<Output<String>> note() {
        return Optional.ofNullable(this.note);
    }

    /**
     * Note describing the activation
     * 
     * @deprecated
     * The setting notes has been deprecated. Use &#34;note&#34; instead.
     * 
     */
    @Deprecated /* The setting notes has been deprecated. Use ""note"" instead. */
    @Import(name="notes")
    private @Nullable Output<String> notes;

    /**
     * @return Note describing the activation
     * 
     * @deprecated
     * The setting notes has been deprecated. Use &#34;note&#34; instead.
     * 
     */
    @Deprecated /* The setting notes has been deprecated. Use ""note"" instead. */
    public Optional<Output<String>> notes() {
        return Optional.ofNullable(this.notes);
    }

    /**
     * List of email addresses to be notified with the results of the activation
     * 
     */
    @Import(name="notificationEmails")
    private @Nullable Output<List<String>> notificationEmails;

    /**
     * @return List of email addresses to be notified with the results of the activation
     * 
     */
    public Optional<Output<List<String>>> notificationEmails() {
        return Optional.ofNullable(this.notificationEmails);
    }

    /**
     * The results of the activation
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The results of the activation
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Version of the security configuration to be activated
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Version of the security configuration to be activated
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private AppSecActivationsState() {}

    private AppSecActivationsState(AppSecActivationsState $) {
        this.activate = $.activate;
        this.configId = $.configId;
        this.network = $.network;
        this.note = $.note;
        this.notes = $.notes;
        this.notificationEmails = $.notificationEmails;
        this.status = $.status;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecActivationsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecActivationsState $;

        public Builder() {
            $ = new AppSecActivationsState();
        }

        public Builder(AppSecActivationsState defaults) {
            $ = new AppSecActivationsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param activate Whether to activate or deactivate the specified security configuration and version
         * 
         * @return builder
         * 
         * @deprecated
         * The setting activate has been deprecated; &#34;terraform apply&#34; will always perform activation. (Use &#34;terraform destroy&#34; for deactivation.)
         * 
         */
        @Deprecated /* The setting activate has been deprecated; ""terraform apply"" will always perform activation. (Use ""terraform destroy"" for deactivation.) */
        public Builder activate(@Nullable Output<Boolean> activate) {
            $.activate = activate;
            return this;
        }

        /**
         * @param activate Whether to activate or deactivate the specified security configuration and version
         * 
         * @return builder
         * 
         * @deprecated
         * The setting activate has been deprecated; &#34;terraform apply&#34; will always perform activation. (Use &#34;terraform destroy&#34; for deactivation.)
         * 
         */
        @Deprecated /* The setting activate has been deprecated; ""terraform apply"" will always perform activation. (Use ""terraform destroy"" for deactivation.) */
        public Builder activate(Boolean activate) {
            return activate(Output.of(activate));
        }

        /**
         * @param configId Unique identifier of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param network Network on which to activate the configuration version (STAGING or PRODUCTION)
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Network on which to activate the configuration version (STAGING or PRODUCTION)
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param note Note describing the activation. Will use timestamp if omitted.
         * 
         * @return builder
         * 
         */
        public Builder note(@Nullable Output<String> note) {
            $.note = note;
            return this;
        }

        /**
         * @param note Note describing the activation. Will use timestamp if omitted.
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            return note(Output.of(note));
        }

        /**
         * @param notes Note describing the activation
         * 
         * @return builder
         * 
         * @deprecated
         * The setting notes has been deprecated. Use &#34;note&#34; instead.
         * 
         */
        @Deprecated /* The setting notes has been deprecated. Use ""note"" instead. */
        public Builder notes(@Nullable Output<String> notes) {
            $.notes = notes;
            return this;
        }

        /**
         * @param notes Note describing the activation
         * 
         * @return builder
         * 
         * @deprecated
         * The setting notes has been deprecated. Use &#34;note&#34; instead.
         * 
         */
        @Deprecated /* The setting notes has been deprecated. Use ""note"" instead. */
        public Builder notes(String notes) {
            return notes(Output.of(notes));
        }

        /**
         * @param notificationEmails List of email addresses to be notified with the results of the activation
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(@Nullable Output<List<String>> notificationEmails) {
            $.notificationEmails = notificationEmails;
            return this;
        }

        /**
         * @param notificationEmails List of email addresses to be notified with the results of the activation
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(List<String> notificationEmails) {
            return notificationEmails(Output.of(notificationEmails));
        }

        /**
         * @param notificationEmails List of email addresses to be notified with the results of the activation
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(String... notificationEmails) {
            return notificationEmails(List.of(notificationEmails));
        }

        /**
         * @param status The results of the activation
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The results of the activation
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param version Version of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public AppSecActivationsState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Security policy; malware protection
 *
 * Returns information about your malware policy actions. Actions specify what happens any time a malware policy is triggered: the issue could be ignored, the request could be denied, or an alert could be generated.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const malwarePolicyActionsAppSecMalwarePolicyActions = configuration.then(configuration => akamai.getAppSecMalwarePolicyActions({
 *     configId: configuration.configId,
 *     securityPolicyId: "gms1_134637",
 * }));
 * export const malwarePolicyActions = malwarePolicyActionsAppSecMalwarePolicyActions.then(malwarePolicyActionsAppSecMalwarePolicyActions => malwarePolicyActionsAppSecMalwarePolicyActions.outputText);
 * ```
 * ## Output Options
 *
 * The following options can be used to determine the information returned, and how that returned information is formatted:
 *
 * - `outputText`. Tabular report showing the ID, scanned action, and unscanned action of the malware policy or policies.
 */
export function getAppSecMalwarePolicyActions(args: GetAppSecMalwarePolicyActionsArgs, opts?: pulumi.InvokeOptions): Promise<GetAppSecMalwarePolicyActionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getAppSecMalwarePolicyActions:getAppSecMalwarePolicyActions", {
        "configId": args.configId,
        "malwarePolicyId": args.malwarePolicyId,
        "securityPolicyId": args.securityPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecMalwarePolicyActions.
 */
export interface GetAppSecMalwarePolicyActionsArgs {
    /**
     * . Unique identifier of the security configuration associated with the malware policies and malware policy actions.
     */
    configId: number;
    /**
     * . Unique identifier of the malware policy you want to return action information for. If not included, action information is returned for all malware policies associated with the specified security policy.
     */
    malwarePolicyId?: number;
    /**
     * . Unique identifier of the security policy associated with the malware policies and malware policy actions.
     */
    securityPolicyId: string;
}

/**
 * A collection of values returned by getAppSecMalwarePolicyActions.
 */
export interface GetAppSecMalwarePolicyActionsResult {
    readonly configId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly malwarePolicyId?: number;
    readonly outputText: string;
    readonly securityPolicyId: string;
}
/**
 * **Scopes**: Security policy; malware protection
 *
 * Returns information about your malware policy actions. Actions specify what happens any time a malware policy is triggered: the issue could be ignored, the request could be denied, or an alert could be generated.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const malwarePolicyActionsAppSecMalwarePolicyActions = configuration.then(configuration => akamai.getAppSecMalwarePolicyActions({
 *     configId: configuration.configId,
 *     securityPolicyId: "gms1_134637",
 * }));
 * export const malwarePolicyActions = malwarePolicyActionsAppSecMalwarePolicyActions.then(malwarePolicyActionsAppSecMalwarePolicyActions => malwarePolicyActionsAppSecMalwarePolicyActions.outputText);
 * ```
 * ## Output Options
 *
 * The following options can be used to determine the information returned, and how that returned information is formatted:
 *
 * - `outputText`. Tabular report showing the ID, scanned action, and unscanned action of the malware policy or policies.
 */
export function getAppSecMalwarePolicyActionsOutput(args: GetAppSecMalwarePolicyActionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppSecMalwarePolicyActionsResult> {
    return pulumi.output(args).apply((a: any) => getAppSecMalwarePolicyActions(a, opts))
}

/**
 * A collection of arguments for invoking getAppSecMalwarePolicyActions.
 */
export interface GetAppSecMalwarePolicyActionsOutputArgs {
    /**
     * . Unique identifier of the security configuration associated with the malware policies and malware policy actions.
     */
    configId: pulumi.Input<number>;
    /**
     * . Unique identifier of the malware policy you want to return action information for. If not included, action information is returned for all malware policies associated with the specified security policy.
     */
    malwarePolicyId?: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the malware policies and malware policy actions.
     */
    securityPolicyId: pulumi.Input<string>;
}

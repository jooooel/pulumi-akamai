// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.EdgeWorker` data source to get an EdgeWorker for a given EdgeWorker ID.
 *
 * ## Example Usage
 *
 * This example returns the resource tier fields for the selected EdgeWorker ID:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const test = akamai.getEdgeWorker({
 *     edgeworkerId: 3,
 *     localBundle: "test_tmp/TestDataEdgeWorkersEdgeWorker/bundles/edgeworker_one_warning.tgz",
 * });
 * ```
 * ## Attributes reference
 *
 * This data source returns these attributes:
 *
 * * `name` - The EdgeWorker name.
 * * `groupId` - Defines the group association for the EdgeWorker.
 * * `resourceTierId` - The unique identifier of a resource tier.
 * * `localBundleHash` - The local bundle hash for the EdgeWorker. It's used to identify content changes for the bundle.
 * * `version` - The bundle version.
 * * `warnings` - The list of warnings returned by EdgeWorker validation.
 */
export function getEdgeWorker(args: GetEdgeWorkerArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeWorkerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getEdgeWorker:getEdgeWorker", {
        "edgeworkerId": args.edgeworkerId,
        "localBundle": args.localBundle,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeWorker.
 */
export interface GetEdgeWorkerArgs {
    /**
     * The unique identifier of the EdgeWorker.
     */
    edgeworkerId: number;
    /**
     * The path where the EdgeWorkers `.tgz` code bundle will be stored.
     */
    localBundle?: string;
}

/**
 * A collection of values returned by getEdgeWorker.
 */
export interface GetEdgeWorkerResult {
    readonly edgeworkerId: number;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly localBundle?: string;
    readonly localBundleHash: string;
    readonly name: string;
    readonly resourceTierId: number;
    readonly version: string;
    readonly warnings: string[];
}
/**
 * Use the `akamai.EdgeWorker` data source to get an EdgeWorker for a given EdgeWorker ID.
 *
 * ## Example Usage
 *
 * This example returns the resource tier fields for the selected EdgeWorker ID:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const test = akamai.getEdgeWorker({
 *     edgeworkerId: 3,
 *     localBundle: "test_tmp/TestDataEdgeWorkersEdgeWorker/bundles/edgeworker_one_warning.tgz",
 * });
 * ```
 * ## Attributes reference
 *
 * This data source returns these attributes:
 *
 * * `name` - The EdgeWorker name.
 * * `groupId` - Defines the group association for the EdgeWorker.
 * * `resourceTierId` - The unique identifier of a resource tier.
 * * `localBundleHash` - The local bundle hash for the EdgeWorker. It's used to identify content changes for the bundle.
 * * `version` - The bundle version.
 * * `warnings` - The list of warnings returned by EdgeWorker validation.
 */
export function getEdgeWorkerOutput(args: GetEdgeWorkerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEdgeWorkerResult> {
    return pulumi.output(args).apply((a: any) => getEdgeWorker(a, opts))
}

/**
 * A collection of arguments for invoking getEdgeWorker.
 */
export interface GetEdgeWorkerOutputArgs {
    /**
     * The unique identifier of the EdgeWorker.
     */
    edgeworkerId: pulumi.Input<number>;
    /**
     * The path where the EdgeWorkers `.tgz` code bundle will be stored.
     */
    localBundle?: pulumi.Input<string>;
}
